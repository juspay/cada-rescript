[
  {
    "moduleName": "React",
    "addedFunctions": [
      [
        "lazy_",
        "let lazy_ = load => lazy_(async () => {default: await load()})"
      ]
    ],
    "modifiedFunctions": [],
    "deletedFunctions": [
      [
        "component",
        "let component = Jsx.component"
      ],
      [
        "addKeyProp",
        "  let addKeyProp = (p: 'props, k: string): 'props =>\n    Obj.magic(Js.Obj.assign(Obj.magic(p), {\"key\": k}))\n)"
      ],
      [
        "createElementWithKey",
        "let createElementWithKey = (component, props, key) =>\n  createElement(component, addKeyProp(props, key))"
      ],
      [
        "createElementVariadicWithKey",
        "let createElementVariadicWithKey = (component, props, elements, key) =>\n  createElementVariadic(component, addKeyProp(props, key), elements)"
      ]
    ],
    "addedTypes": [
      [
        "dynamicallyImportedModule",
        "type dynamicallyImportedModule<'a> = {default: component<'a>}"
      ],
      [
        "transitionFunction",
        "type transitionFunction = unit => promise<unit>"
      ],
      [
        "transitionStartFunction",
        "type transitionStartFunction = transitionFunction => unit"
      ],
      [
        "action",
        "type action<'state, 'payload> = ('state, 'payload) => promise<'state>"
      ],
      [
        "formAction",
        "type formAction<'formData> = 'formData => promise<unit>"
      ]
    ],
    "modifiedTypes": [
      [
        "fragmentProps",
        "type fragmentProps<'children> = {children: 'children}",
        "type fragmentProps = {children?: element}"
      ],
      [
        "props",
        "  type props<'children, 'fallback> = {key?: string, children?: 'children, fallback?: 'fallback}\n  @module(\"react\")\n  external make: component<props<'children, 'fallback>> = \"Suspense\"\n}",
        "  type props = {key?: string, children: element}\n  @module(\"react\")\n  external make: component<props> = \"Fragment\"\n}"
      ],
      [
        "props",
        "  type props<'children, 'fallback> = {key?: string, children?: 'children, fallback?: 'fallback}\n  @module(\"react\")\n  external make: component<props<'children, 'fallback>> = \"Suspense\"\n}",
        "  type props = {key?: string, children: element}\n  @module(\"react\")\n  external make: component<props> = \"StrictMode\"\n}"
      ],
      [
        "props",
        "  type props<'children, 'fallback> = {key?: string, children?: 'children, fallback?: 'fallback}\n  @module(\"react\")\n  external make: component<props<'children, 'fallback>> = \"Suspense\"\n}",
        "  type props = {key?: string, children?: element, fallback?: element}\n  @module(\"react\")\n  external make: component<props> = \"Suspense\"\n}"
      ]
    ],
    "deletedTypes": [
      [
        "revealOrder",
        "    type revealOrder\n    type tail\n    type props<'children, 'revealOrder, 'tail> = {\n      key?: string,\n      children?: 'children,\n      revealOrder?: 'revealOrder,\n      tail?: 'tail,\n    }\n    @module(\"react\")\n    external make: component<props<'children, 'revealOrder, 'tail>> = \"SuspenseList\"\n  }\n}"
      ],
      [
        "callback",
        "type callback<'input, 'output> = 'input => 'output"
      ],
      [
        "transitionConfig",
        "type transitionConfig = {timeoutMs: int}"
      ]
    ],
    "addedExternals": [
      [
        "promise",
        "external promise: promise<element> => element = \"%identity\""
      ],
      [
        "component",
        "external component: componentLike<'props, element> => component<'props> = \"%identity\""
      ],
      [
        "isValidElement",
        "external isValidElement: 'a => bool = \"isValidElement\""
      ],
      [
        "lazy_",
        "external lazy_: (unit => promise<dynamicallyImportedModule<'a>>) => component<'a> = \"lazy\""
      ],
      [
        "useEffectOnEveryRender",
        "external useEffectOnEveryRender: (unit => option<unit => unit>) => unit = \"useEffect\""
      ],
      [
        "useLayoutEffectOnEveryRender",
        "external useLayoutEffectOnEveryRender: (unit => option<unit => unit>) => unit = \"useLayoutEffect\""
      ],
      [
        "usePromise",
        "external usePromise: promise<'a> => 'a = \"use\""
      ],
      [
        "useImperativeHandleOnEveryRender",
        "external useImperativeHandleOnEveryRender: (Js.Nullable.t<ref<'value>>, unit => 'value) => unit ="
      ],
      [
        "useImperativeHandle",
        "external useImperativeHandle: (Js.Nullable.t<ref<'value>>, unit => 'value, 'deps) => unit ="
      ],
      [
        "useDeferredValue",
        "external useDeferredValue: ('value, ~initialValue: 'value=?) => 'value = \"useDeferredValue\""
      ],
      [
        "useInsertionEffectOnEveryRender",
        "external useInsertionEffectOnEveryRender: (unit => option<unit => unit>) => unit ="
      ],
      [
        "useInsertionEffect",
        "external useInsertionEffect: (unit => option<unit => unit>, 'deps) => unit = \"useInsertionEffect\""
      ],
      [
        "useInsertionEffect0",
        "external useInsertionEffect0: (unit => option<unit => unit>, @as(json`[]`) _) => unit ="
      ],
      [
        "useInsertionEffect1",
        "external useInsertionEffect1: (unit => option<unit => unit>, array<'a>) => unit ="
      ],
      [
        "useInsertionEffect2",
        "external useInsertionEffect2: (unit => option<unit => unit>, ('a, 'b)) => unit ="
      ],
      [
        "useInsertionEffect3",
        "external useInsertionEffect3: (unit => option<unit => unit>, ('a, 'b, 'c)) => unit ="
      ],
      [
        "useInsertionEffect4",
        "external useInsertionEffect4: (unit => option<unit => unit>, ('a, 'b, 'c, 'd)) => unit ="
      ],
      [
        "useInsertionEffect5",
        "external useInsertionEffect5: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e)) => unit ="
      ],
      [
        "useInsertionEffect6",
        "external useInsertionEffect6: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f)) => unit ="
      ],
      [
        "useInsertionEffect7",
        "external useInsertionEffect7: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => unit ="
      ],
      [
        "useSyncExternalStore",
        "external useSyncExternalStore: (\n  ~subscribe: (unit => unit) => unit => unit,\n  ~getSnapshot: unit => 'state,\n) => 'state = \"useSyncExternalStore\""
      ],
      [
        "useSyncExternalStoreWithServerSnapshot",
        "external useSyncExternalStoreWithServerSnapshot: (\n  ~subscribe: (unit => unit) => unit => unit,\n  ~getSnapshot: unit => 'state,\n  ~getServerSnapshot: unit => 'state,\n) => 'state = \"useSyncExternalStore\""
      ],
      [
        "useActionState",
        "external useActionState: (\n  action<'state, 'payload>,\n  'state,\n  ~permalink: string=?,\n) => ('state, formAction<'payload>, bool) = \"useActionState\""
      ],
      [
        "useOptimistic",
        "external useOptimistic: (\n  'state,\n  ~updateFn: ('state, 'action) => 'state=?,\n) => ('state, 'action => unit) = \"useOptimistic\""
      ],
      [
        "act",
        "external act: (unit => promise<unit>) => promise<unit> = \"act\""
      ]
    ],
    "modifiedExternals": [
      [
        "jsxKeyed",
        "external jsxKeyed: (component<'props>, 'props, string) => element = \"jsx\"",
        "external jsxKeyed: (component<'props>, 'props, ~key: string=?, @ignore unit) => element = \"jsx\""
      ],
      [
        "jsxsKeyed",
        "external jsxsKeyed: (component<'props>, 'props, string) => element = \"jsxs\"",
        "external jsxsKeyed: (component<'props>, 'props, ~key: string=?, @ignore unit) => element = \"jsxs\""
      ],
      [
        "map",
        "  external map: (element, element => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external mapWithIndex: (element, @uncurry (element, int) => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external forEach: (element, element => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external forEachWithIndex: (element, @uncurry (element, int) => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external count: element => int = \"count\"\n  @module(\"react\") @scope(\"Children\")\n  external only: element => element = \"only\"\n  @module(\"react\") @scope(\"Children\")\n  external toArray: element => array<element> = \"toArray\"\n}",
        "  external map: (element, element => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external mapWithIndex: (element, (element, int) => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external forEach: (element, element => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external forEachWithIndex: (element, (element, int) => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external count: element => int = \"count\"\n  @module(\"react\") @scope(\"Children\")\n  external only: element => element = \"only\"\n  @module(\"react\") @scope(\"Children\")\n  external toArray: element => array<element> = \"toArray\"\n}"
      ],
      [
        "forwardRef",
        "external forwardRef: (@uncurry ('props, Js.Nullable.t<ref<'a>>) => element) => component<'props> =",
        "external forwardRef: (('props, Js.Nullable.t<ref<'a>>) => element) => component<'props> ="
      ],
      [
        "memoCustomCompareProps",
        "external memoCustomCompareProps: (\n  component<'props>,\n  @uncurry ('props, 'props) => bool,\n) => component<'props> = \"memo\"",
        "external memoCustomCompareProps: (\n  component<'props>,\n  ('props, 'props) => bool,\n) => component<'props> = \"memo\""
      ],
      [
        "useState",
        "  external useState: (@uncurry (unit => 'state)) => ('state, (. 'state => 'state) => unit) =\n    \"useState\"\n  @module(\"react\")\n  external useReducer: (\n    @uncurry ('state, 'action) => 'state,\n    'state,\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  @module(\"react\")\n  external useReducerWithMapState: (\n    @uncurry ('state, 'action) => 'state,\n    'initialState,\n    @uncurry ('initialState => 'state),\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  type callback<'input, 'output> = (. 'input) => 'output\n  @module(\"react\")\n  external useCallback: (@uncurry ('input => 'output)) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback0: (\n    @uncurry ('input => 'output),\n    @as(json`[]`) _,\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback1: (@uncurry ('input => 'output), array<'a>) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback2: (@uncurry ('input => 'output), ('a, 'b)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback3: (@uncurry ('input => 'output), ('a, 'b, 'c)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback4: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback5: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback6: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback7: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n  ) => callback<'input, 'output> = \"useCallback\"\n}",
        "external useState: (unit => 'state) => ('state, ('state => 'state) => unit) = \"useState\""
      ],
      [
        "useReducer",
        "external useReducer: (@uncurry ('state, 'action) => 'state, 'state) => ('state, 'action => unit) =",
        "external useReducer: (('state, 'action) => 'state, 'state) => ('state, 'action => unit) ="
      ],
      [
        "useReducerWithMapState",
        "external useReducerWithMapState: (\n  @uncurry ('state, 'action) => 'state,\n  'initialState,\n  @uncurry ('initialState => 'state),\n) => ('state, 'action => unit) = \"useReducer\"",
        "external useReducerWithMapState: (\n  ('state, 'action) => 'state,\n  'initialState,\n  'initialState => 'state,\n) => ('state, 'action => unit) = \"useReducer\""
      ],
      [
        "useEffect",
        "external useEffect: (@uncurry (unit => option<unit => unit>)) => unit = \"useEffect\"",
        "external useEffect: (unit => option<unit => unit>, 'deps) => unit = \"useEffect\""
      ],
      [
        "useEffect0",
        "external useEffect0: (@uncurry (unit => option<unit => unit>), @as(json`[]`) _) => unit =",
        "external useEffect0: (unit => option<unit => unit>, @as(json`[]`) _) => unit = \"useEffect\""
      ],
      [
        "useEffect1",
        "external useEffect1: (@uncurry (unit => option<unit => unit>), array<'a>) => unit = \"useEffect\"",
        "external useEffect1: (unit => option<unit => unit>, array<'a>) => unit = \"useEffect\""
      ],
      [
        "useEffect2",
        "external useEffect2: (@uncurry (unit => option<unit => unit>), ('a, 'b)) => unit = \"useEffect\"",
        "external useEffect2: (unit => option<unit => unit>, ('a, 'b)) => unit = \"useEffect\""
      ],
      [
        "useEffect3",
        "external useEffect3: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c)) => unit = \"useEffect\"",
        "external useEffect3: (unit => option<unit => unit>, ('a, 'b, 'c)) => unit = \"useEffect\""
      ],
      [
        "useEffect4",
        "external useEffect4: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd)) => unit =",
        "external useEffect4: (unit => option<unit => unit>, ('a, 'b, 'c, 'd)) => unit = \"useEffect\""
      ],
      [
        "useEffect5",
        "external useEffect5: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e)) => unit =",
        "external useEffect5: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e)) => unit = \"useEffect\""
      ],
      [
        "useEffect6",
        "external useEffect6: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e, 'f)) => unit =",
        "external useEffect6: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f)) => unit = \"useEffect\""
      ],
      [
        "useEffect7",
        "external useEffect7: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useEffect\"",
        "external useEffect7: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => unit ="
      ],
      [
        "useLayoutEffect",
        "external useLayoutEffect: (@uncurry (unit => option<unit => unit>)) => unit = \"useLayoutEffect\"",
        "external useLayoutEffect: (unit => option<unit => unit>, 'deps) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect0",
        "external useLayoutEffect0: (@uncurry (unit => option<unit => unit>), @as(json`[]`) _) => unit =",
        "external useLayoutEffect0: (unit => option<unit => unit>, @as(json`[]`) _) => unit ="
      ],
      [
        "useLayoutEffect1",
        "external useLayoutEffect1: (@uncurry (unit => option<unit => unit>), array<'a>) => unit =",
        "external useLayoutEffect1: (unit => option<unit => unit>, array<'a>) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect2",
        "external useLayoutEffect2: (@uncurry (unit => option<unit => unit>), ('a, 'b)) => unit =",
        "external useLayoutEffect2: (unit => option<unit => unit>, ('a, 'b)) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect3",
        "external useLayoutEffect3: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c)) => unit =",
        "external useLayoutEffect3: (unit => option<unit => unit>, ('a, 'b, 'c)) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect4",
        "external useLayoutEffect4: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd)) => unit =",
        "external useLayoutEffect4: (unit => option<unit => unit>, ('a, 'b, 'c, 'd)) => unit ="
      ],
      [
        "useLayoutEffect5",
        "external useLayoutEffect5: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e)) => unit =",
        "external useLayoutEffect5: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e)) => unit ="
      ],
      [
        "useLayoutEffect6",
        "external useLayoutEffect6: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => unit = \"useLayoutEffect\"",
        "external useLayoutEffect6: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f)) => unit ="
      ],
      [
        "useLayoutEffect7",
        "external useLayoutEffect7: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useLayoutEffect\"",
        "external useLayoutEffect7: (unit => option<unit => unit>, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => unit ="
      ],
      [
        "useMemo",
        "external useMemo: (@uncurry (unit => 'any)) => 'any = \"useMemo\"",
        "external useMemo: (unit => 'any, 'deps) => 'any = \"useMemo\""
      ],
      [
        "useMemo0",
        "external useMemo0: (@uncurry (unit => 'any), @as(json`[]`) _) => 'any = \"useMemo\"",
        "external useMemo0: (unit => 'any, @as(json`[]`) _) => 'any = \"useMemo\""
      ],
      [
        "useMemo1",
        "external useMemo1: (@uncurry (unit => 'any), array<'a>) => 'any = \"useMemo\"",
        "external useMemo1: (unit => 'any, array<'a>) => 'any = \"useMemo\""
      ],
      [
        "useMemo2",
        "external useMemo2: (@uncurry (unit => 'any), ('a, 'b)) => 'any = \"useMemo\"",
        "external useMemo2: (unit => 'any, ('a, 'b)) => 'any = \"useMemo\""
      ],
      [
        "useMemo3",
        "external useMemo3: (@uncurry (unit => 'any), ('a, 'b, 'c)) => 'any = \"useMemo\"",
        "external useMemo3: (unit => 'any, ('a, 'b, 'c)) => 'any = \"useMemo\""
      ],
      [
        "useMemo4",
        "external useMemo4: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd)) => 'any = \"useMemo\"",
        "external useMemo4: (unit => 'any, ('a, 'b, 'c, 'd)) => 'any = \"useMemo\""
      ],
      [
        "useMemo5",
        "external useMemo5: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e)) => 'any = \"useMemo\"",
        "external useMemo5: (unit => 'any, ('a, 'b, 'c, 'd, 'e)) => 'any = \"useMemo\""
      ],
      [
        "useMemo6",
        "external useMemo6: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e, 'f)) => 'any = \"useMemo\"",
        "external useMemo6: (unit => 'any, ('a, 'b, 'c, 'd, 'e, 'f)) => 'any = \"useMemo\""
      ],
      [
        "useMemo7",
        "external useMemo7: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => 'any = \"useMemo\"",
        "external useMemo7: (unit => 'any, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => 'any = \"useMemo\""
      ],
      [
        "useCallback",
        "external useCallback: (@uncurry ('input => 'output)) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback: ('f, 'deps) => 'f = \"useCallback\""
      ],
      [
        "useCallback0",
        "external useCallback0: (\n  @uncurry ('input => 'output),\n  @as(json`[]`) _,\n) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback0: ('f, @as(json`[]`) _) => 'f = \"useCallback\""
      ],
      [
        "useCallback1",
        "external useCallback1: (@uncurry ('input => 'output), array<'a>) => callback<'input, 'output> =",
        "external useCallback1: ('f, array<'a>) => 'f = \"useCallback\""
      ],
      [
        "useCallback2",
        "external useCallback2: (@uncurry ('input => 'output), ('a, 'b)) => callback<'input, 'output> =",
        "external useCallback2: ('f, ('a, 'b)) => 'f = \"useCallback\""
      ],
      [
        "useCallback3",
        "external useCallback3: (@uncurry ('input => 'output), ('a, 'b, 'c)) => callback<'input, 'output> =",
        "external useCallback3: ('f, ('a, 'b, 'c)) => 'f = \"useCallback\""
      ],
      [
        "useCallback4",
        "external useCallback4: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd),\n) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback4: ('f, ('a, 'b, 'c, 'd)) => 'f = \"useCallback\""
      ],
      [
        "useCallback5",
        "external useCallback5: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e),\n) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback5: ('f, ('a, 'b, 'c, 'd, 'e)) => 'f = \"useCallback\""
      ],
      [
        "useCallback6",
        "external useCallback6: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback6: ('callback, ('a, 'b, 'c, 'd, 'e, 'f)) => 'callback = \"useCallback\""
      ],
      [
        "useCallback7",
        "external useCallback7: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => callback<'input, 'output> = \"useCallback\"",
        "external useCallback7: ('callback, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => 'callback = \"useCallback\""
      ],
      [
        "useImperativeHandle0",
        "external useImperativeHandle0: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  @as(json`[]`) _,\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle0: (\n  Js.Nullable.t<ref<'value>>,\n  unit => 'value,\n  @as(json`[]`) _,\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle1",
        "external useImperativeHandle1: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  array<'a>,\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle1: (Js.Nullable.t<ref<'value>>, unit => 'value, array<'a>) => unit ="
      ],
      [
        "useImperativeHandle2",
        "external useImperativeHandle2: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle2: (Js.Nullable.t<ref<'value>>, unit => 'value, ('a, 'b)) => unit ="
      ],
      [
        "useImperativeHandle3",
        "external useImperativeHandle3: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle3: (Js.Nullable.t<ref<'value>>, unit => 'value, ('a, 'b, 'c)) => unit ="
      ],
      [
        "useImperativeHandle4",
        "external useImperativeHandle4: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle4: (\n  Js.Nullable.t<ref<'value>>,\n  unit => 'value,\n  ('a, 'b, 'c, 'd),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle5",
        "external useImperativeHandle5: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle5: (\n  Js.Nullable.t<ref<'value>>,\n  unit => 'value,\n  ('a, 'b, 'c, 'd, 'e),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle6",
        "external useImperativeHandle6: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle6: (\n  Js.Nullable.t<ref<'value>>,\n  unit => 'value,\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle7",
        "external useImperativeHandle7: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useImperativeHandle\"",
        "external useImperativeHandle7: (\n  Js.Nullable.t<ref<'value>>,\n  unit => 'value,\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useState",
        "  external useState: (@uncurry (unit => 'state)) => ('state, (. 'state => 'state) => unit) =\n    \"useState\"\n  @module(\"react\")\n  external useReducer: (\n    @uncurry ('state, 'action) => 'state,\n    'state,\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  @module(\"react\")\n  external useReducerWithMapState: (\n    @uncurry ('state, 'action) => 'state,\n    'initialState,\n    @uncurry ('initialState => 'state),\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  type callback<'input, 'output> = (. 'input) => 'output\n  @module(\"react\")\n  external useCallback: (@uncurry ('input => 'output)) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback0: (\n    @uncurry ('input => 'output),\n    @as(json`[]`) _,\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback1: (@uncurry ('input => 'output), array<'a>) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback2: (@uncurry ('input => 'output), ('a, 'b)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback3: (@uncurry ('input => 'output), ('a, 'b, 'c)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback4: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback5: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback6: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback7: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n  ) => callback<'input, 'output> = \"useCallback\"\n}",
        "  external useState: (unit => 'state) => ('state, ('state => 'state) => unit) = \"useState\"\n  @module(\"react\")\n  external useReducer: (('state, 'action) => 'state, 'state) => ('state, 'action => unit) =\n    \"useReducer\"\n  @module(\"react\")\n  external useReducerWithMapState: (\n    ('state, 'action) => 'state,\n    'initialState,\n    'initialState => 'state,\n  ) => ('state, 'action => unit) = \"useReducer\"\n  @module(\"react\")\n  external useCallback: ('f, 'deps) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback0: ('f, @as(json`[]`) _) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback1: ('f, array<'a>) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback2: ('f, ('a, 'b)) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback3: ('f, ('a, 'b, 'c)) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback4: ('f, ('a, 'b, 'c, 'd)) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback5: ('f, ('a, 'b, 'c, 'd, 'e)) => 'f = \"useCallback\"\n  @module(\"react\")\n  external useCallback6: ('callback, ('a, 'b, 'c, 'd, 'e, 'f)) => 'callback = \"useCallback\"\n  @module(\"react\")\n  external useCallback7: ('callback, ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => 'callback = \"useCallback\"\n}"
      ],
      [
        "useTransition",
        "external useTransition: (\n  ~config: transitionConfig=?,\n  unit,\n) => (callback<callback<unit, unit>, unit>, bool) = \"useTransition\"",
        "external useTransition: unit => (bool, transitionStartFunction) = \"useTransition\""
      ]
    ],
    "deletedExternals": []
  },
  {
    "moduleName": "ReactDOM",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [
      [
        "formStatus",
        "type formStatus<'state> = {\n  pending: bool,\n  data: FormData.t,\n  method: [#get | #post],\n  action: React.action<'state, FormData.t>,\n}"
      ],
      [
        "crossOrigin",
        "type crossOrigin = ["
      ],
      [
        "referrerPolicy",
        "type referrerPolicy = ["
      ],
      [
        "fetchPriority",
        "type fetchPriority = [#auto | #high | #low]"
      ],
      [
        "preloadOptions",
        "type preloadOptions = {\n  @as(\"as\")\n  as_: [\n    | #audio\n    | #document\n    | #embed\n    | #fetch\n    | #font\n    | #image\n    | #object\n    | #script\n    | #style\n    | #track\n    | #video\n    | #worker\n  ],\n  crossOrigin?: crossOrigin,\n  referrerPolicy?: referrerPolicy,\n  integrity?: string,\n  @as(\"type\")\n  type_?: string,\n  nonce?: string,\n  fetchPriority?: fetchPriority,\n  imageSrcSet?: string,\n  imageSizes?: string,\n}"
      ],
      [
        "preloadModuleOptions",
        "type preloadModuleOptions = {\n  @as(\"as\")\n  as_: [#script],\n  crossOrigin?: crossOrigin,\n  integrity?: string,\n  nonce?: string,\n}"
      ],
      [
        "preinitOptions",
        "type preinitOptions = {\n  @as(\"as\")\n  as_: [#script | #style],\n  precedence?: [#reset | #low | #medium | #high],\n  crossOrigin?: crossOrigin,\n  referrerPolicy?: referrerPolicy,\n  integrity?: string,\n  nonce?: string,\n  fetchPriority?: fetchPriority,\n}"
      ]
    ],
    "modifiedTypes": [
      [
        "t",
        "  type t = domRef\n  type currentDomRef = React.ref<Js.nullable<Dom.element>>\n  type callbackDomRef = Js.nullable<Dom.element> => unit\n  external domRef: currentDomRef => domRef = \"%identity\"\n  external callbackDomRef: callbackDomRef => domRef = \"%identity\"\n}",
        "    type t\n    @send external render: (t, React.element) => unit = \"render\"\n    @send external unmount: (t, unit) => unit = \"unmount\"\n  }\n  @module(\"react-dom/client\")\n  external createRoot: Dom.element => Root.t = \"createRoot\"\n  @module(\"react-dom/client\")\n  external hydrateRoot: (Dom.element, React.element) => Root.t = \"hydrateRoot\"\n}"
      ],
      [
        "t",
        "  type t = domRef\n  type currentDomRef = React.ref<Js.nullable<Dom.element>>\n  type callbackDomRef = Js.nullable<Dom.element> => unit\n  external domRef: currentDomRef => domRef = \"%identity\"\n  external callbackDomRef: callbackDomRef => domRef = \"%identity\"\n}",
        "  type t\n  type file\n  type formValue =\n    | String(string)\n    | File(file)\n  @new external make: unit => t = \"FormData\"\n  @send external append: (t, string, ~filename: string=?) => unit = \"append\"\n  @send external delete: (t, string) => unit = \"delete\"\n  @return(nullable) @send external getUnsafe: (t, string) => option<'a> = \"get\"\n  @send external getAllUnsafe: (t, string) => array<'a> = \"getAll\"\n  let getString = (formData, name) => {\n    switch formData->getUnsafe(name) {\n    | Some(value) => Js.typeof(value) === \"string\" ? Some(value) : None\n    | _ => None\n    }\n  }\n  external _asFile: 'a => file = \"%identity\"\n  let getFile = (formData, name) => {\n    switch formData->getUnsafe(name) {\n    | Some(value) => Js.typeof(value) === \"string\" ? None : Some(value->_asFile)\n    | _ => None\n    }\n  }\n  let getAll = (t, string) => {\n    t\n    ->getAllUnsafe(string)\n    ->Js.Array2.map(value => {\n      Js.typeof(value) === \"string\" ? String(value) : File(value->_asFile)\n    })\n  }\n  @send external set: (string, string) => unit = \"set\"\n  @send external has: string => bool = \"has\"\n}"
      ],
      [
        "t",
        "  type t = domRef\n  type currentDomRef = React.ref<Js.nullable<Dom.element>>\n  type callbackDomRef = Js.nullable<Dom.element> => unit\n  external domRef: currentDomRef => domRef = \"%identity\"\n  external callbackDomRef: callbackDomRef => domRef = \"%identity\"\n}",
        "  type t = domRef\n  type currentDomRef = React.ref<Js.nullable<Dom.element>>\n  type callbackDomRef = Js.nullable<Dom.element> => option<unit => unit>\n  external domRef: currentDomRef => domRef = \"%identity\"\n  external callbackDomRef: callbackDomRef => domRef = \"%identity\"\n}"
      ],
      [
        "domProps",
        "  type domProps = {\n    @optional\n    key: string,\n    @optional\n    ref: domRef,\n    @optional @as(\"aria-details\")\n    ariaDetails: string,\n    @optional @as(\"aria-disabled\")\n    ariaDisabled: bool,\n    @optional @as(\"aria-hidden\")\n    ariaHidden: bool,\n    @optional @as(\"aria-keyshortcuts\")\n    ariaKeyshortcuts: string,\n    @optional @as(\"aria-label\")\n    ariaLabel: string,\n    @optional @as(\"aria-roledescription\")\n    ariaRoledescription: string,\n    @optional @as(\"aria-expanded\")\n    ariaExpanded: bool,\n    @optional @as(\"aria-level\")\n    ariaLevel: int,\n    @optional @as(\"aria-modal\")\n    ariaModal: bool,\n    @optional @as(\"aria-multiline\")\n    ariaMultiline: bool,\n    @optional @as(\"aria-multiselectable\")\n    ariaMultiselectable: bool,\n    @optional @as(\"aria-placeholder\")\n    ariaPlaceholder: string,\n    @optional @as(\"aria-readonly\")\n    ariaReadonly: bool,\n    @optional @as(\"aria-required\")\n    ariaRequired: bool,\n    @optional @as(\"aria-selected\")\n    ariaSelected: bool,\n    @optional @as(\"aria-sort\")\n    ariaSort: string,\n    @optional @as(\"aria-valuemax\")\n    ariaValuemax: float,\n    @optional @as(\"aria-valuemin\")\n    ariaValuemin: float,\n    @optional @as(\"aria-valuenow\")\n    ariaValuenow: float,\n    @optional @as(\"aria-valuetext\")\n    ariaValuetext: string,\n    @optional @as(\"aria-atomic\")\n    ariaAtomic: bool,\n    @optional @as(\"aria-busy\")\n    ariaBusy: bool,\n    @optional @as(\"aria-relevant\")\n    ariaRelevant: string,\n    @optional @as(\"aria-grabbed\")\n    ariaGrabbed: bool,\n    @optional @as(\"aria-activedescendant\")\n    ariaActivedescendant: string,\n    @optional @as(\"aria-colcount\")\n    ariaColcount: int,\n    @optional @as(\"aria-colindex\")\n    ariaColindex: int,\n    @optional @as(\"aria-colspan\")\n    ariaColspan: int,\n    @optional @as(\"aria-controls\")\n    ariaControls: string,\n    @optional @as(\"aria-describedby\")\n    ariaDescribedby: string,\n    @optional @as(\"aria-errormessage\")\n    ariaErrormessage: string,\n    @optional @as(\"aria-flowto\")\n    ariaFlowto: string,\n    @optional @as(\"aria-labelledby\")\n    ariaLabelledby: string,\n    @optional @as(\"aria-owns\")\n    ariaOwns: string,\n    @optional @as(\"aria-posinset\")\n    ariaPosinset: int,\n    @optional @as(\"aria-rowcount\")\n    ariaRowcount: int,\n    @optional @as(\"aria-rowindex\")\n    ariaRowindex: int,\n    @optional @as(\"aria-rowspan\")\n    ariaRowspan: int,\n    @optional @as(\"aria-setsize\")\n    ariaSetsize: int,\n    @optional\n    defaultChecked: bool,\n    @optional\n    defaultValue: string,\n    @optional\n    accessKey: string,\n    @optional\n    className: string /* substitute for \"class\" */,\n    @optional\n    contentEditable: bool,\n    @optional\n    contextMenu: string,\n    @optional\n    dir: string /* \"ltr\", \"rtl\" or \"auto\" */,\n    @optional\n    draggable: bool,\n    @optional\n    hidden: bool,\n    @optional\n    id: string,\n    @optional\n    lang: string,\n    @optional\n    role: string /* ARIA role */,\n    @optional\n    style: style,\n    @optional\n    spellCheck: bool,\n    @optional\n    tabIndex: int,\n    @optional\n    title: string,\n    @optional\n    itemID: string,\n    @optional\n    itemProp: string,\n    @optional\n    itemRef: string,\n    @optional\n    itemScope: bool,\n    @optional\n    itemType: string /* uri */,\n    @optional\n    accept: string,\n    @optional\n    acceptCharset: string,\n    @optional\n    action: string /* uri */,\n    @optional\n    allowFullScreen: bool,\n    @optional\n    alt: string,\n    @optional\n    async: bool,\n    @optional\n    autoComplete: string /* has a fixed, but large-ish, set of possible values */,\n    @optional\n    autoCapitalize: string /* Mobile Safari specific */,\n    @optional\n    autoFocus: bool,\n    @optional\n    autoPlay: bool,\n    @optional\n    challenge: string,\n    @optional\n    charSet: string,\n    @optional\n    checked: bool,\n    @optional\n    cite: string /* uri */,\n    @optional\n    crossOrigin: string /* anonymous, use-credentials */,\n    @optional\n    cols: int,\n    @optional\n    colSpan: int,\n    @optional\n    content: string,\n    @optional\n    controls: bool,\n    @optional\n    coords: string /* set of values specifying the coordinates of a region */,\n    @optional\n    data: string /* uri */,\n    @optional\n    dateTime: string /* \"valid date string with optional time\" */,\n    @optional\n    default: bool,\n    @optional\n    defer: bool,\n    @optional\n    disabled: bool,\n    @optional\n    download: string /* should really be either a boolean, signifying presence, or a string */,\n    @optional\n    encType: string /* \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\" */,\n    @optional\n    form: string,\n    @optional\n    formAction: string /* uri */,\n    @optional\n    formTarget: string /* \"_blank\", \"_self\", etc. */,\n    @optional\n    formMethod: string /* \"post\", \"get\", \"put\" */,\n    @optional\n    headers: string,\n    @optional\n    height: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    high: int,\n    @optional\n    href: string /* uri */,\n    @optional\n    hrefLang: string,\n    @optional\n    htmlFor: string /* substitute for \"for\" */,\n    @optional\n    httpEquiv: string /* has a fixed set of possible values */,\n    @optional\n    icon: string /* uri? */,\n    @optional\n    inputMode: string /* \"verbatim\", \"latin\", \"numeric\", etc. */,\n    @optional\n    integrity: string,\n    @optional\n    keyType: string,\n    @optional\n    kind: string /* has a fixed set of possible values */,\n    @optional\n    label: string,\n    @optional\n    list: string,\n    @optional\n    loading: [#\"lazy\" | #eager],\n    @optional\n    loop: bool,\n    @optional\n    low: int,\n    @optional\n    manifest: string /* uri */,\n    @optional\n    max: string /* should be int or Js.Date.t */,\n    @optional\n    maxLength: int,\n    @optional\n    media: string /* a valid media query */,\n    @optional\n    mediaGroup: string,\n    @optional\n    method: string /* \"post\" or \"get\" */,\n    @optional\n    min: string,\n    @optional\n    minLength: int,\n    @optional\n    multiple: bool,\n    @optional\n    muted: bool,\n    @optional\n    name: string,\n    @optional\n    nonce: string,\n    @optional\n    noValidate: bool,\n    @optional @as(\"open\")\n    open_: bool /* use this one. Previous one is deprecated */,\n    @optional\n    optimum: int,\n    @optional\n    pattern: string /* valid Js RegExp */,\n    @optional\n    placeholder: string,\n    @optional\n    playsInline: bool,\n    @optional\n    poster: string /* uri */,\n    @optional\n    preload: string /* \"none\", \"metadata\" or \"auto\" (and \"\" as a synonym for \"auto\") */,\n    @optional\n    radioGroup: string,\n    @optional\n    readOnly: bool,\n    @optional\n    rel: string /* a space- or comma-separated (depending on the element) list of a fixed set of \"link types\" */,\n    @optional\n    required: bool,\n    @optional\n    reversed: bool,\n    @optional\n    rows: int,\n    @optional\n    rowSpan: int,\n    @optional\n    sandbox: string /* has a fixed set of possible values */,\n    @optional\n    scope: string /* has a fixed set of possible values */,\n    @optional\n    scoped: bool,\n    @optional\n    scrolling: string /* html4 only, \"auto\", \"yes\" or \"no\" */,\n    @optional\n    selected: bool,\n    @optional\n    shape: string,\n    @optional\n    size: int,\n    @optional\n    sizes: string,\n    @optional\n    span: int,\n    @optional\n    src: string /* uri */,\n    @optional\n    srcDoc: string,\n    @optional\n    srcLang: string,\n    @optional\n    srcSet: string,\n    @optional\n    start: int,\n    @optional\n    step: float,\n    @optional\n    summary: string /* deprecated */,\n    @optional\n    target: string,\n    @optional @as(\"type\")\n    type_: string /* has a fixed but large-ish set of possible values */ /* use this one. Previous one is deprecated */,\n    @optional\n    useMap: string,\n    @optional\n    value: string,\n    @optional\n    width: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    wrap: string /* \"hard\" or \"soft\" */,\n    @optional\n    onCopy: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCut: ReactEvent.Clipboard.t => unit,\n    @optional\n    onPaste: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCompositionEnd: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionStart: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionUpdate: ReactEvent.Composition.t => unit,\n    @optional\n    onKeyDown: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyPress: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyUp: ReactEvent.Keyboard.t => unit,\n    @optional\n    onFocus: ReactEvent.Focus.t => unit,\n    @optional\n    onBlur: ReactEvent.Focus.t => unit,\n    @optional\n    onChange: ReactEvent.Form.t => unit,\n    @optional\n    onInput: ReactEvent.Form.t => unit,\n    @optional\n    onSubmit: ReactEvent.Form.t => unit,\n    @optional\n    onInvalid: ReactEvent.Form.t => unit,\n    @optional\n    onClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onContextMenu: ReactEvent.Mouse.t => unit,\n    @optional\n    onDoubleClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrag: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnd: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragExit: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragStart: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrop: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseDown: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseMove: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOut: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseUp: ReactEvent.Mouse.t => unit,\n    @optional\n    onSelect: ReactEvent.Selection.t => unit,\n    @optional\n    onTouchCancel: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchEnd: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchMove: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchStart: ReactEvent.Touch.t => unit,\n    @optional\n    onPointerOver: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerEnter: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerDown: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerMove: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerUp: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerCancel: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerOut: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerLeave: ReactEvent.Pointer.t => unit,\n    @optional\n    onGotPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onLostPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onScroll: ReactEvent.UI.t => unit,\n    @optional\n    onWheel: ReactEvent.Wheel.t => unit,\n    @optional\n    onAbort: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlay: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlayThrough: ReactEvent.Media.t => unit,\n    @optional\n    onDurationChange: ReactEvent.Media.t => unit,\n    @optional\n    onEmptied: ReactEvent.Media.t => unit,\n    @optional\n    onEncrypted: ReactEvent.Media.t => unit,\n    @optional\n    onEnded: ReactEvent.Media.t => unit,\n    @optional\n    onError: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedData: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedMetadata: ReactEvent.Media.t => unit,\n    @optional\n    onLoadStart: ReactEvent.Media.t => unit,\n    @optional\n    onPause: ReactEvent.Media.t => unit,\n    @optional\n    onPlay: ReactEvent.Media.t => unit,\n    @optional\n    onPlaying: ReactEvent.Media.t => unit,\n    @optional\n    onProgress: ReactEvent.Media.t => unit,\n    @optional\n    onRateChange: ReactEvent.Media.t => unit,\n    @optional\n    onSeeked: ReactEvent.Media.t => unit,\n    @optional\n    onSeeking: ReactEvent.Media.t => unit,\n    @optional\n    onStalled: ReactEvent.Media.t => unit,\n    @optional\n    onSuspend: ReactEvent.Media.t => unit,\n    @optional\n    onTimeUpdate: ReactEvent.Media.t => unit,\n    @optional\n    onVolumeChange: ReactEvent.Media.t => unit,\n    @optional\n    onWaiting: ReactEvent.Media.t => unit,\n    @optional\n    onLoad: ReactEvent.Image.t => unit /* duplicate */ /* ~onError: ReactEvent.Image.t => unit=?, */,\n    @optional\n    onAnimationStart: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationEnd: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationIteration: ReactEvent.Animation.t => unit,\n    @optional\n    onTransitionEnd: ReactEvent.Transition.t => unit,\n    @optional\n    accentHeight: string,\n    @optional\n    accumulate: string,\n    @optional\n    additive: string,\n    @optional\n    alignmentBaseline: string,\n    @optional\n    allowReorder: string,\n    @optional\n    alphabetic: string,\n    @optional\n    amplitude: string,\n    @optional\n    arabicForm: string,\n    @optional\n    ascent: string,\n    @optional\n    attributeName: string,\n    @optional\n    attributeType: string,\n    @optional\n    autoReverse: string,\n    @optional\n    azimuth: string,\n    @optional\n    baseFrequency: string,\n    @optional\n    baseProfile: string,\n    @optional\n    baselineShift: string,\n    @optional\n    bbox: string,\n    @optional @as(\"begin\")\n    begin_: string /* use this one. Previous one is deprecated */,\n    @optional\n    bias: string,\n    @optional\n    by: string,\n    @optional\n    calcMode: string,\n    @optional\n    capHeight: string,\n    @optional\n    clip: string,\n    @optional\n    clipPath: string,\n    @optional\n    clipPathUnits: string,\n    @optional\n    clipRule: string,\n    @optional\n    colorInterpolation: string,\n    @optional\n    colorInterpolationFilters: string,\n    @optional\n    colorProfile: string,\n    @optional\n    colorRendering: string,\n    @optional\n    contentScriptType: string,\n    @optional\n    contentStyleType: string,\n    @optional\n    cursor: string,\n    @optional\n    cx: string,\n    @optional\n    cy: string,\n    @optional\n    d: string,\n    @optional\n    decelerate: string,\n    @optional\n    descent: string,\n    @optional\n    diffuseConstant: string,\n    @optional\n    direction: string,\n    @optional\n    display: string,\n    @optional\n    divisor: string,\n    @optional\n    dominantBaseline: string,\n    @optional\n    dur: string,\n    @optional\n    dx: string,\n    @optional\n    dy: string,\n    @optional\n    edgeMode: string,\n    @optional\n    elevation: string,\n    @optional\n    enableBackground: string,\n    @optional @as(\"end\")\n    end_: string /* use this one. Previous one is deprecated */,\n    @optional\n    exponent: string,\n    @optional\n    externalResourcesRequired: string,\n    @optional\n    fill: string,\n    @optional\n    fillOpacity: string,\n    @optional\n    fillRule: string,\n    @optional\n    filter: string,\n    @optional\n    filterRes: string,\n    @optional\n    filterUnits: string,\n    @optional\n    floodColor: string,\n    @optional\n    floodOpacity: string,\n    @optional\n    focusable: string,\n    @optional\n    fontFamily: string,\n    @optional\n    fontSize: string,\n    @optional\n    fontSizeAdjust: string,\n    @optional\n    fontStretch: string,\n    @optional\n    fontStyle: string,\n    @optional\n    fontVariant: string,\n    @optional\n    fontWeight: string,\n    @optional\n    fomat: string,\n    @optional\n    from: string,\n    @optional\n    fx: string,\n    @optional\n    fy: string,\n    @optional\n    g1: string,\n    @optional\n    g2: string,\n    @optional\n    glyphName: string,\n    @optional\n    glyphOrientationHorizontal: string,\n    @optional\n    glyphOrientationVertical: string,\n    @optional\n    glyphRef: string,\n    @optional\n    gradientTransform: string,\n    @optional\n    gradientUnits: string,\n    @optional\n    hanging: string,\n    @optional\n    horizAdvX: string,\n    @optional\n    horizOriginX: string,\n    @optional\n    ideographic: string,\n    @optional\n    imageRendering: string,\n    @optional @as(\"in\")\n    in_: string /* use this one. Previous one is deprecated */,\n    @optional\n    in2: string,\n    @optional\n    intercept: string,\n    @optional\n    k: string,\n    @optional\n    k1: string,\n    @optional\n    k2: string,\n    @optional\n    k3: string,\n    @optional\n    k4: string,\n    @optional\n    kernelMatrix: string,\n    @optional\n    kernelUnitLength: string,\n    @optional\n    kerning: string,\n    @optional\n    keyPoints: string,\n    @optional\n    keySplines: string,\n    @optional\n    keyTimes: string,\n    @optional\n    lengthAdjust: string,\n    @optional\n    letterSpacing: string,\n    @optional\n    lightingColor: string,\n    @optional\n    limitingConeAngle: string,\n    @optional\n    local: string,\n    @optional\n    markerEnd: string,\n    @optional\n    markerHeight: string,\n    @optional\n    markerMid: string,\n    @optional\n    markerStart: string,\n    @optional\n    markerUnits: string,\n    @optional\n    markerWidth: string,\n    @optional\n    mask: string,\n    @optional\n    maskContentUnits: string,\n    @optional\n    maskUnits: string,\n    @optional\n    mathematical: string,\n    @optional\n    mode: string,\n    @optional\n    numOctaves: string,\n    @optional\n    offset: string,\n    @optional\n    opacity: string,\n    @optional\n    operator: string,\n    @optional\n    order: string,\n    @optional\n    orient: string,\n    @optional\n    orientation: string,\n    @optional\n    origin: string,\n    @optional\n    overflow: string,\n    @optional\n    overflowX: string,\n    @optional\n    overflowY: string,\n    @optional\n    overlinePosition: string,\n    @optional\n    overlineThickness: string,\n    @optional\n    paintOrder: string,\n    @optional\n    panose1: string,\n    @optional\n    pathLength: string,\n    @optional\n    patternContentUnits: string,\n    @optional\n    patternTransform: string,\n    @optional\n    patternUnits: string,\n    @optional\n    pointerEvents: string,\n    @optional\n    points: string,\n    @optional\n    pointsAtX: string,\n    @optional\n    pointsAtY: string,\n    @optional\n    pointsAtZ: string,\n    @optional\n    preserveAlpha: string,\n    @optional\n    preserveAspectRatio: string,\n    @optional\n    primitiveUnits: string,\n    @optional\n    r: string,\n    @optional\n    radius: string,\n    @optional\n    refX: string,\n    @optional\n    refY: string,\n    @optional\n    renderingIntent: string,\n    @optional\n    repeatCount: string,\n    @optional\n    repeatDur: string,\n    @optional\n    requiredExtensions: string,\n    @optional\n    requiredFeatures: string,\n    @optional\n    restart: string,\n    @optional\n    result: string,\n    @optional\n    rotate: string,\n    @optional\n    rx: string,\n    @optional\n    ry: string,\n    @optional\n    scale: string,\n    @optional\n    seed: string,\n    @optional\n    shapeRendering: string,\n    @optional\n    slope: string,\n    @optional\n    spacing: string,\n    @optional\n    specularConstant: string,\n    @optional\n    specularExponent: string,\n    @optional\n    speed: string,\n    @optional\n    spreadMethod: string,\n    @optional\n    startOffset: string,\n    @optional\n    stdDeviation: string,\n    @optional\n    stemh: string,\n    @optional\n    stemv: string,\n    @optional\n    stitchTiles: string,\n    @optional\n    stopColor: string,\n    @optional\n    stopOpacity: string,\n    @optional\n    strikethroughPosition: string,\n    @optional\n    strikethroughThickness: string,\n    @optional\n    string: string,\n    @optional\n    stroke: string,\n    @optional\n    strokeDasharray: string,\n    @optional\n    strokeDashoffset: string,\n    @optional\n    strokeLinecap: string,\n    @optional\n    strokeLinejoin: string,\n    @optional\n    strokeMiterlimit: string,\n    @optional\n    strokeOpacity: string,\n    @optional\n    strokeWidth: string,\n    @optional\n    surfaceScale: string,\n    @optional\n    systemLanguage: string,\n    @optional\n    tableValues: string,\n    @optional\n    targetX: string,\n    @optional\n    targetY: string,\n    @optional\n    textAnchor: string,\n    @optional\n    textDecoration: string,\n    @optional\n    textLength: string,\n    @optional\n    textRendering: string,\n    @optional @as(\"to\")\n    to_: string /* use this one. Previous one is deprecated */,\n    @optional\n    transform: string,\n    @optional\n    u1: string,\n    @optional\n    u2: string,\n    @optional\n    underlinePosition: string,\n    @optional\n    underlineThickness: string,\n    @optional\n    unicode: string,\n    @optional\n    unicodeBidi: string,\n    @optional\n    unicodeRange: string,\n    @optional\n    unitsPerEm: string,\n    @optional\n    vAlphabetic: string,\n    @optional\n    vHanging: string,\n    @optional\n    vIdeographic: string,\n    @optional\n    vMathematical: string,\n    @optional\n    values: string,\n    @optional\n    vectorEffect: string,\n    @optional\n    version: string,\n    @optional\n    vertAdvX: string,\n    @optional\n    vertAdvY: string,\n    @optional\n    vertOriginX: string,\n    @optional\n    vertOriginY: string,\n    @optional\n    viewBox: string,\n    @optional\n    viewTarget: string,\n    @optional\n    visibility: string,\n    @optional\n    widths: string,\n    @optional\n    wordSpacing: string,\n    @optional\n    writingMode: string,\n    @optional\n    x: string,\n    @optional\n    x1: string,\n    @optional\n    x2: string,\n    @optional\n    xChannelSelector: string,\n    @optional\n    xHeight: string,\n    @optional\n    xlinkActuate: string,\n    @optional\n    xlinkArcrole: string,\n    @optional\n    xlinkHref: string,\n    @optional\n    xlinkRole: string,\n    @optional\n    xlinkShow: string,\n    @optional\n    xlinkTitle: string,\n    @optional\n    xlinkType: string,\n    @optional\n    xmlns: string,\n    @optional\n    xmlnsXlink: string,\n    @optional\n    xmlBase: string,\n    @optional\n    xmlLang: string,\n    @optional\n    xmlSpace: string,\n    @optional\n    y: string,\n    @optional\n    y1: string,\n    @optional\n    y2: string,\n    @optional\n    yChannelSelector: string,\n    @optional\n    z: string,\n    @optional\n    zoomAndPan: string,\n    @optional\n    about: string,\n    @optional\n    datatype: string,\n    @optional\n    inlist: string,\n    @optional\n    prefix: string,\n    @optional\n    property: string,\n    @optional\n    resource: string,\n    @optional\n    typeof: string,\n    @optional\n    vocab: string,\n    @optional\n    dangerouslySetInnerHTML: {\"__html\": string},\n    @optional\n    suppressContentEditableWarning: bool,\n  }\n   * Watch out! There are two props types and the only difference is the type of ref.\n   * Please keep in sync.\n   */\n  @deriving(abstract)\n  type props = {\n    @optional\n    key: string,\n    @optional\n    ref: Js.nullable<Dom.element> => unit,\n    @optional @as(\"aria-details\")\n    ariaDetails: string,\n    @optional @as(\"aria-disabled\")\n    ariaDisabled: bool,\n    @optional @as(\"aria-hidden\")\n    ariaHidden: bool,\n    @optional @as(\"aria-keyshortcuts\")\n    ariaKeyshortcuts: string,\n    @optional @as(\"aria-label\")\n    ariaLabel: string,\n    @optional @as(\"aria-roledescription\")\n    ariaRoledescription: string,\n    @optional @as(\"aria-expanded\")\n    ariaExpanded: bool,\n    @optional @as(\"aria-level\")\n    ariaLevel: int,\n    @optional @as(\"aria-modal\")\n    ariaModal: bool,\n    @optional @as(\"aria-multiline\")\n    ariaMultiline: bool,\n    @optional @as(\"aria-multiselectable\")\n    ariaMultiselectable: bool,\n    @optional @as(\"aria-placeholder\")\n    ariaPlaceholder: string,\n    @optional @as(\"aria-readonly\")\n    ariaReadonly: bool,\n    @optional @as(\"aria-required\")\n    ariaRequired: bool,\n    @optional @as(\"aria-selected\")\n    ariaSelected: bool,\n    @optional @as(\"aria-sort\")\n    ariaSort: string,\n    @optional @as(\"aria-valuemax\")\n    ariaValuemax: float,\n    @optional @as(\"aria-valuemin\")\n    ariaValuemin: float,\n    @optional @as(\"aria-valuenow\")\n    ariaValuenow: float,\n    @optional @as(\"aria-valuetext\")\n    ariaValuetext: string,\n    @optional @as(\"aria-atomic\")\n    ariaAtomic: bool,\n    @optional @as(\"aria-busy\")\n    ariaBusy: bool,\n    @optional @as(\"aria-relevant\")\n    ariaRelevant: string,\n    @optional @as(\"aria-grabbed\")\n    ariaGrabbed: bool,\n    @optional @as(\"aria-activedescendant\")\n    ariaActivedescendant: string,\n    @optional @as(\"aria-colcount\")\n    ariaColcount: int,\n    @optional @as(\"aria-colindex\")\n    ariaColindex: int,\n    @optional @as(\"aria-colspan\")\n    ariaColspan: int,\n    @optional @as(\"aria-controls\")\n    ariaControls: string,\n    @optional @as(\"aria-describedby\")\n    ariaDescribedby: string,\n    @optional @as(\"aria-errormessage\")\n    ariaErrormessage: string,\n    @optional @as(\"aria-flowto\")\n    ariaFlowto: string,\n    @optional @as(\"aria-labelledby\")\n    ariaLabelledby: string,\n    @optional @as(\"aria-owns\")\n    ariaOwns: string,\n    @optional @as(\"aria-posinset\")\n    ariaPosinset: int,\n    @optional @as(\"aria-rowcount\")\n    ariaRowcount: int,\n    @optional @as(\"aria-rowindex\")\n    ariaRowindex: int,\n    @optional @as(\"aria-rowspan\")\n    ariaRowspan: int,\n    @optional @as(\"aria-setsize\")\n    ariaSetsize: int,\n    @optional\n    defaultChecked: bool,\n    @optional\n    defaultValue: string,\n    @optional\n    accessKey: string,\n    @optional\n    className: string /* substitute for \"class\" */,\n    @optional\n    contentEditable: bool,\n    @optional\n    contextMenu: string,\n    @optional\n    dir: string /* \"ltr\", \"rtl\" or \"auto\" */,\n    @optional\n    draggable: bool,\n    @optional\n    hidden: bool,\n    @optional\n    id: string,\n    @optional\n    lang: string,\n    @optional\n    role: string /* ARIA role */,\n    @optional\n    style: style,\n    @optional\n    spellCheck: bool,\n    @optional\n    tabIndex: int,\n    @optional\n    title: string,\n    @optional\n    itemID: string,\n    @optional\n    itemProp: string,\n    @optional\n    itemRef: string,\n    @optional\n    itemScope: bool,\n    @optional\n    itemType: string /* uri */,\n    @optional\n    accept: string,\n    @optional\n    acceptCharset: string,\n    @optional\n    action: string /* uri */,\n    @optional\n    allow: string,\n    @optional\n    allowFullScreen: bool,\n    @optional\n    alt: string,\n    @optional\n    async: bool,\n    @optional\n    autoComplete: string /* has a fixed, but large-ish, set of possible values */,\n    @optional\n    autoCapitalize: string /* Mobile Safari specific */,\n    @optional\n    autoFocus: bool,\n    @optional\n    autoPlay: bool,\n    @optional\n    challenge: string,\n    @optional\n    charSet: string,\n    @optional\n    checked: bool,\n    @optional\n    cite: string /* uri */,\n    @optional\n    crossorigin: bool,\n    @optional\n    cols: int,\n    @optional\n    colSpan: int,\n    @optional\n    content: string,\n    @optional\n    controls: bool,\n    @optional\n    coords: string /* set of values specifying the coordinates of a region */,\n    @optional\n    data: string /* uri */,\n    @optional\n    dateTime: string /* \"valid date string with optional time\" */,\n    @optional\n    default: bool,\n    @optional\n    defer: bool,\n    @optional\n    disabled: bool,\n    @optional\n    download: string /* should really be either a boolean, signifying presence, or a string */,\n    @optional\n    encType: string /* \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\" */,\n    @optional\n    form: string,\n    @optional\n    formAction: string /* uri */,\n    @optional\n    formTarget: string /* \"_blank\", \"_self\", etc. */,\n    @optional\n    formMethod: string /* \"post\", \"get\", \"put\" */,\n    @optional\n    frameBorder: int /* deprecated, prefer to use css border instead */,\n    @optional\n    headers: string,\n    @optional\n    height: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    high: int,\n    @optional\n    href: string /* uri */,\n    @optional\n    hrefLang: string,\n    @optional\n    htmlFor: string /* substitute for \"for\" */,\n    @optional\n    httpEquiv: string /* has a fixed set of possible values */,\n    @optional\n    icon: string /* uri? */,\n    @optional\n    inputMode: string /* \"verbatim\", \"latin\", \"numeric\", etc. */,\n    @optional\n    integrity: string,\n    @optional\n    keyType: string,\n    @optional\n    kind: string /* has a fixed set of possible values */,\n    @optional\n    label: string,\n    @optional\n    list: string,\n    @optional\n    loop: bool,\n    @optional\n    low: int,\n    @optional\n    manifest: string /* uri */,\n    @optional\n    max: string /* should be int or Js.Date.t */,\n    @optional\n    maxLength: int,\n    @optional\n    media: string /* a valid media query */,\n    @optional\n    mediaGroup: string,\n    @optional\n    method: string /* \"post\" or \"get\" */,\n    @optional\n    min: string,\n    @optional\n    minLength: int,\n    @optional\n    multiple: bool,\n    @optional\n    muted: bool,\n    @optional\n    name: string,\n    @optional\n    nonce: string,\n    @optional\n    noValidate: bool,\n    @optional @as(\"open\")\n    open_: bool /* use this one. Previous one is deprecated */,\n    @optional\n    optimum: int,\n    @optional\n    pattern: string /* valid Js RegExp */,\n    @optional\n    placeholder: string,\n    @optional\n    poster: string /* uri */,\n    @optional\n    preload: string /* \"none\", \"metadata\" or \"auto\" (and \"\" as a synonym for \"auto\") */,\n    @optional\n    radioGroup: string,\n    @optional\n    readOnly: bool,\n    @optional\n    rel: string /* a space- or comma-separated (depending on the element) list of a fixed set of \"link types\" */,\n    @optional\n    required: bool,\n    @optional\n    reversed: bool,\n    @optional\n    rows: int,\n    @optional\n    rowSpan: int,\n    @optional\n    sandbox: string /* has a fixed set of possible values */,\n    @optional\n    scope: string /* has a fixed set of possible values */,\n    @optional\n    scoped: bool,\n    @optional\n    scrolling: string /* html4 only, \"auto\", \"yes\" or \"no\" */,\n    @optional\n    selected: bool,\n    @optional\n    shape: string,\n    @optional\n    size: int,\n    @optional\n    sizes: string,\n    @optional\n    span: int,\n    @optional\n    src: string /* uri */,\n    @optional\n    srcDoc: string,\n    @optional\n    srcLang: string,\n    @optional\n    srcSet: string,\n    @optional\n    start: int,\n    @optional\n    step: float,\n    @optional\n    summary: string /* deprecated */,\n    @optional\n    target: string,\n    @optional @as(\"type\")\n    type_: string /* has a fixed but large-ish set of possible values */ /* use this one. Previous one is deprecated */,\n    @optional\n    useMap: string,\n    @optional\n    value: string,\n    @optional\n    width: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    wrap: string /* \"hard\" or \"soft\" */,\n    @optional\n    onCopy: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCut: ReactEvent.Clipboard.t => unit,\n    @optional\n    onPaste: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCompositionEnd: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionStart: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionUpdate: ReactEvent.Composition.t => unit,\n    @optional\n    onKeyDown: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyPress: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyUp: ReactEvent.Keyboard.t => unit,\n    @optional\n    onFocus: ReactEvent.Focus.t => unit,\n    @optional\n    onBlur: ReactEvent.Focus.t => unit,\n    @optional\n    onChange: ReactEvent.Form.t => unit,\n    @optional\n    onInput: ReactEvent.Form.t => unit,\n    @optional\n    onSubmit: ReactEvent.Form.t => unit,\n    @optional\n    onInvalid: ReactEvent.Form.t => unit,\n    @optional\n    onClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onContextMenu: ReactEvent.Mouse.t => unit,\n    @optional\n    onDoubleClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrag: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnd: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragExit: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragStart: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrop: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseDown: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseMove: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOut: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseUp: ReactEvent.Mouse.t => unit,\n    @optional\n    onSelect: ReactEvent.Selection.t => unit,\n    @optional\n    onTouchCancel: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchEnd: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchMove: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchStart: ReactEvent.Touch.t => unit,\n    @optional\n    onPointerOver: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerEnter: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerDown: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerMove: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerUp: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerCancel: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerOut: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerLeave: ReactEvent.Pointer.t => unit,\n    @optional\n    onGotPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onLostPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onScroll: ReactEvent.UI.t => unit,\n    @optional\n    onWheel: ReactEvent.Wheel.t => unit,\n    @optional\n    onAbort: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlay: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlayThrough: ReactEvent.Media.t => unit,\n    @optional\n    onDurationChange: ReactEvent.Media.t => unit,\n    @optional\n    onEmptied: ReactEvent.Media.t => unit,\n    @optional\n    onEncrypetd: ReactEvent.Media.t => unit,\n    @optional\n    onEnded: ReactEvent.Media.t => unit,\n    @optional\n    onError: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedData: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedMetadata: ReactEvent.Media.t => unit,\n    @optional\n    onLoadStart: ReactEvent.Media.t => unit,\n    @optional\n    onPause: ReactEvent.Media.t => unit,\n    @optional\n    onPlay: ReactEvent.Media.t => unit,\n    @optional\n    onPlaying: ReactEvent.Media.t => unit,\n    @optional\n    onProgress: ReactEvent.Media.t => unit,\n    @optional\n    onRateChange: ReactEvent.Media.t => unit,\n    @optional\n    onSeeked: ReactEvent.Media.t => unit,\n    @optional\n    onSeeking: ReactEvent.Media.t => unit,\n    @optional\n    onStalled: ReactEvent.Media.t => unit,\n    @optional\n    onSuspend: ReactEvent.Media.t => unit,\n    @optional\n    onTimeUpdate: ReactEvent.Media.t => unit,\n    @optional\n    onVolumeChange: ReactEvent.Media.t => unit,\n    @optional\n    onWaiting: ReactEvent.Media.t => unit,\n    @optional\n    onLoad: ReactEvent.Image.t => unit /* duplicate */ /* ~onError: ReactEvent.Image.t => unit=?, */,\n    @optional\n    onAnimationStart: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationEnd: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationIteration: ReactEvent.Animation.t => unit,\n    @optional\n    onTransitionEnd: ReactEvent.Transition.t => unit,\n    @optional\n    accentHeight: string,\n    @optional\n    accumulate: string,\n    @optional\n    additive: string,\n    @optional\n    alignmentBaseline: string,\n    @optional\n    allowReorder: string,\n    @optional\n    alphabetic: string,\n    @optional\n    amplitude: string,\n    @optional\n    arabicForm: string,\n    @optional\n    ascent: string,\n    @optional\n    attributeName: string,\n    @optional\n    attributeType: string,\n    @optional\n    autoReverse: string,\n    @optional\n    azimuth: string,\n    @optional\n    baseFrequency: string,\n    @optional\n    baseProfile: string,\n    @optional\n    baselineShift: string,\n    @optional\n    bbox: string,\n    @optional @as(\"begin\")\n    begin_: string /* use this one. Previous one is deprecated */,\n    @optional\n    bias: string,\n    @optional\n    by: string,\n    @optional\n    calcMode: string,\n    @optional\n    capHeight: string,\n    @optional\n    clip: string,\n    @optional\n    clipPath: string,\n    @optional\n    clipPathUnits: string,\n    @optional\n    clipRule: string,\n    @optional\n    colorInterpolation: string,\n    @optional\n    colorInterpolationFilters: string,\n    @optional\n    colorProfile: string,\n    @optional\n    colorRendering: string,\n    @optional\n    contentScriptType: string,\n    @optional\n    contentStyleType: string,\n    @optional\n    cursor: string,\n    @optional\n    cx: string,\n    @optional\n    cy: string,\n    @optional\n    d: string,\n    @optional\n    decelerate: string,\n    @optional\n    descent: string,\n    @optional\n    diffuseConstant: string,\n    @optional\n    direction: string,\n    @optional\n    display: string,\n    @optional\n    divisor: string,\n    @optional\n    dominantBaseline: string,\n    @optional\n    dur: string,\n    @optional\n    dx: string,\n    @optional\n    dy: string,\n    @optional\n    edgeMode: string,\n    @optional\n    elevation: string,\n    @optional\n    enableBackground: string,\n    @optional @as(\"end\")\n    end_: string /* use this one. Previous one is deprecated */,\n    @optional\n    exponent: string,\n    @optional\n    externalResourcesRequired: string,\n    @optional\n    fill: string,\n    @optional\n    fillOpacity: string,\n    @optional\n    fillRule: string,\n    @optional\n    filter: string,\n    @optional\n    filterRes: string,\n    @optional\n    filterUnits: string,\n    @optional\n    floodColor: string,\n    @optional\n    floodOpacity: string,\n    @optional\n    focusable: string,\n    @optional\n    fontFamily: string,\n    @optional\n    fontSize: string,\n    @optional\n    fontSizeAdjust: string,\n    @optional\n    fontStretch: string,\n    @optional\n    fontStyle: string,\n    @optional\n    fontVariant: string,\n    @optional\n    fontWeight: string,\n    @optional\n    fomat: string,\n    @optional\n    from: string,\n    @optional\n    fx: string,\n    @optional\n    fy: string,\n    @optional\n    g1: string,\n    @optional\n    g2: string,\n    @optional\n    glyphName: string,\n    @optional\n    glyphOrientationHorizontal: string,\n    @optional\n    glyphOrientationVertical: string,\n    @optional\n    glyphRef: string,\n    @optional\n    gradientTransform: string,\n    @optional\n    gradientUnits: string,\n    @optional\n    hanging: string,\n    @optional\n    horizAdvX: string,\n    @optional\n    horizOriginX: string,\n    @optional\n    ideographic: string,\n    @optional\n    imageRendering: string,\n    @optional @as(\"in\")\n    in_: string /* use this one. Previous one is deprecated */,\n    @optional\n    in2: string,\n    @optional\n    intercept: string,\n    @optional\n    k: string,\n    @optional\n    k1: string,\n    @optional\n    k2: string,\n    @optional\n    k3: string,\n    @optional\n    k4: string,\n    @optional\n    kernelMatrix: string,\n    @optional\n    kernelUnitLength: string,\n    @optional\n    kerning: string,\n    @optional\n    keyPoints: string,\n    @optional\n    keySplines: string,\n    @optional\n    keyTimes: string,\n    @optional\n    lengthAdjust: string,\n    @optional\n    letterSpacing: string,\n    @optional\n    lightingColor: string,\n    @optional\n    limitingConeAngle: string,\n    @optional\n    local: string,\n    @optional\n    markerEnd: string,\n    @optional\n    markerHeight: string,\n    @optional\n    markerMid: string,\n    @optional\n    markerStart: string,\n    @optional\n    markerUnits: string,\n    @optional\n    markerWidth: string,\n    @optional\n    mask: string,\n    @optional\n    maskContentUnits: string,\n    @optional\n    maskUnits: string,\n    @optional\n    mathematical: string,\n    @optional\n    mode: string,\n    @optional\n    numOctaves: string,\n    @optional\n    offset: string,\n    @optional\n    opacity: string,\n    @optional\n    operator: string,\n    @optional\n    order: string,\n    @optional\n    orient: string,\n    @optional\n    orientation: string,\n    @optional\n    origin: string,\n    @optional\n    overflow: string,\n    @optional\n    overflowX: string,\n    @optional\n    overflowY: string,\n    @optional\n    overlinePosition: string,\n    @optional\n    overlineThickness: string,\n    @optional\n    paintOrder: string,\n    @optional\n    panose1: string,\n    @optional\n    pathLength: string,\n    @optional\n    patternContentUnits: string,\n    @optional\n    patternTransform: string,\n    @optional\n    patternUnits: string,\n    @optional\n    pointerEvents: string,\n    @optional\n    points: string,\n    @optional\n    pointsAtX: string,\n    @optional\n    pointsAtY: string,\n    @optional\n    pointsAtZ: string,\n    @optional\n    preserveAlpha: string,\n    @optional\n    preserveAspectRatio: string,\n    @optional\n    primitiveUnits: string,\n    @optional\n    r: string,\n    @optional\n    radius: string,\n    @optional\n    refX: string,\n    @optional\n    refY: string,\n    @optional\n    renderingIntent: string,\n    @optional\n    repeatCount: string,\n    @optional\n    repeatDur: string,\n    @optional\n    requiredExtensions: string,\n    @optional\n    requiredFeatures: string,\n    @optional\n    restart: string,\n    @optional\n    result: string,\n    @optional\n    rotate: string,\n    @optional\n    rx: string,\n    @optional\n    ry: string,\n    @optional\n    scale: string,\n    @optional\n    seed: string,\n    @optional\n    shapeRendering: string,\n    @optional\n    slope: string,\n    @optional\n    spacing: string,\n    @optional\n    specularConstant: string,\n    @optional\n    specularExponent: string,\n    @optional\n    speed: string,\n    @optional\n    spreadMethod: string,\n    @optional\n    startOffset: string,\n    @optional\n    stdDeviation: string,\n    @optional\n    stemh: string,\n    @optional\n    stemv: string,\n    @optional\n    stitchTiles: string,\n    @optional\n    stopColor: string,\n    @optional\n    stopOpacity: string,\n    @optional\n    strikethroughPosition: string,\n    @optional\n    strikethroughThickness: string,\n    @optional\n    string: string,\n    @optional\n    stroke: string,\n    @optional\n    strokeDasharray: string,\n    @optional\n    strokeDashoffset: string,\n    @optional\n    strokeLinecap: string,\n    @optional\n    strokeLinejoin: string,\n    @optional\n    strokeMiterlimit: string,\n    @optional\n    strokeOpacity: string,\n    @optional\n    strokeWidth: string,\n    @optional\n    surfaceScale: string,\n    @optional\n    systemLanguage: string,\n    @optional\n    tableValues: string,\n    @optional\n    targetX: string,\n    @optional\n    targetY: string,\n    @optional\n    textAnchor: string,\n    @optional\n    textDecoration: string,\n    @optional\n    textLength: string,\n    @optional\n    textRendering: string,\n    @optional @as(\"to\")\n    to_: string /* use this one. Previous one is deprecated */,\n    @optional\n    transform: string,\n    @optional\n    u1: string,\n    @optional\n    u2: string,\n    @optional\n    underlinePosition: string,\n    @optional\n    underlineThickness: string,\n    @optional\n    unicode: string,\n    @optional\n    unicodeBidi: string,\n    @optional\n    unicodeRange: string,\n    @optional\n    unitsPerEm: string,\n    @optional\n    vAlphabetic: string,\n    @optional\n    vHanging: string,\n    @optional\n    vIdeographic: string,\n    @optional\n    vMathematical: string,\n    @optional\n    values: string,\n    @optional\n    vectorEffect: string,\n    @optional\n    version: string,\n    @optional\n    vertAdvX: string,\n    @optional\n    vertAdvY: string,\n    @optional\n    vertOriginX: string,\n    @optional\n    vertOriginY: string,\n    @optional\n    viewBox: string,\n    @optional\n    viewTarget: string,\n    @optional\n    visibility: string,\n    @optional\n    widths: string,\n    @optional\n    wordSpacing: string,\n    @optional\n    writingMode: string,\n    @optional\n    x: string,\n    @optional\n    x1: string,\n    @optional\n    x2: string,\n    @optional\n    xChannelSelector: string,\n    @optional\n    xHeight: string,\n    @optional\n    xlinkActuate: string,\n    @optional\n    xlinkArcrole: string,\n    @optional\n    xlinkHref: string,\n    @optional\n    xlinkRole: string,\n    @optional\n    xlinkShow: string,\n    @optional\n    xlinkTitle: string,\n    @optional\n    xlinkType: string,\n    @optional\n    xmlns: string,\n    @optional\n    xmlnsXlink: string,\n    @optional\n    xmlBase: string,\n    @optional\n    xmlLang: string,\n    @optional\n    xmlSpace: string,\n    @optional\n    y: string,\n    @optional\n    y1: string,\n    @optional\n    y2: string,\n    @optional\n    yChannelSelector: string,\n    @optional\n    z: string,\n    @optional\n    zoomAndPan: string,\n    @optional\n    about: string,\n    @optional\n    datatype: string,\n    @optional\n    inlist: string,\n    @optional\n    prefix: string,\n    @optional\n    property: string,\n    @optional\n    resource: string,\n    @optional\n    typeof: string,\n    @optional\n    vocab: string,\n    @optional\n    dangerouslySetInnerHTML: {\"__html\": string},\n    @optional\n    suppressContentEditableWarning: bool,\n  }\n}",
        "type domProps = JsxDOM.domProps"
      ]
    ],
    "deletedTypes": [
      [
        "root",
        "  type root\n  @module(\"react-dom\")\n  external createRoot: Dom.element => root = \"createRoot\"\n  @module(\"react-dom\")\n  external createBlockingRoot: Dom.element => root = \"createBlockingRoot\"\n  @send external render: (root, React.element) => unit = \"render\"\n}"
      ]
    ],
    "addedExternals": [
      [
        "formAction",
        "external formAction: React.formAction<FormData.t> => string = \"%identity\""
      ],
      [
        "useFormStatus",
        "external useFormStatus: unit => formStatus<'state> = \"useFormStatus\""
      ],
      [
        "prefetchDNS",
        "external prefetchDNS: string => unit = \"prefetchDNS\""
      ],
      [
        "preconnect",
        "external preconnect: string => unit = \"preconnect\""
      ],
      [
        "preload",
        "external preload: (string, preloadOptions) => unit = \"preload\""
      ],
      [
        "preloadModule",
        "external preloadModule: (string, preloadModuleOptions) => unit = \"preloadModule\""
      ],
      [
        "preinit",
        "external preinit: (string, preinitOptions) => unit = \"preinit\""
      ],
      [
        "preinitModule",
        "external preinitModule: (string, preloadModuleOptions) => unit = \"preinitModule\""
      ],
      [
        "someElement",
        "external someElement: React.element => option<React.element> = \"%identity\""
      ]
    ],
    "modifiedExternals": [
      [
        "createElement",
        "external createElement: (string, ~props: props=?, array<React.element>) => React.element =",
        "external createElement: (string, ~props: domProps=?, array<React.element>) => React.element ="
      ],
      [
        "jsxKeyed",
        "external jsxKeyed: (string, JsxDOM.domProps, string) => Jsx.element = \"jsx\"",
        "external jsxKeyed: (string, JsxDOM.domProps, ~key: string=?, @ignore unit) => Jsx.element = \"jsx\""
      ],
      [
        "jsxsKeyed",
        "external jsxsKeyed: (string, JsxDOM.domProps, string) => Jsx.element = \"jsxs\"",
        "external jsxsKeyed: (string, JsxDOM.domProps, ~key: string=?, @ignore unit) => Jsx.element = \"jsxs\""
      ]
    ],
    "deletedExternals": [
      [
        "render",
        "external render: (React.element, Dom.element) => unit = \"render\""
      ],
      [
        "hydrate",
        "external hydrate: (React.element, Dom.element) => unit = \"hydrate\""
      ],
      [
        "unmountComponentAtNode",
        "external unmountComponentAtNode: Dom.element => unit = \"unmountComponentAtNode\""
      ],
      [
        "stringToComponent",
        "external stringToComponent: string => React.component<JsxDOM.domProps> = \"%identity\""
      ]
    ]
  },
  {
    "moduleName": "ReactDOMStyle",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "make",
        "external make: (\n  ~azimuth: string=?,\n  ~background: string=?,\n  ~backgroundAttachment: string=?,\n  ~backgroundColor: string=?,\n  ~backgroundImage: string=?,\n  ~backgroundPosition: string=?,\n  ~backgroundRepeat: string=?,\n  ~border: string=?,\n  ~borderCollapse: string=?,\n  ~borderColor: string=?,\n  ~borderSpacing: string=?,\n  ~borderStyle: string=?,\n  ~borderTop: string=?,\n  ~borderRight: string=?,\n  ~borderBottom: string=?,\n  ~borderLeft: string=?,\n  ~borderTopColor: string=?,\n  ~borderRightColor: string=?,\n  ~borderBottomColor: string=?,\n  ~borderLeftColor: string=?,\n  ~borderTopStyle: string=?,\n  ~borderRightStyle: string=?,\n  ~borderBottomStyle: string=?,\n  ~borderLeftStyle: string=?,\n  ~borderTopWidth: string=?,\n  ~borderRightWidth: string=?,\n  ~borderBottomWidth: string=?,\n  ~borderLeftWidth: string=?,\n  ~borderWidth: string=?,\n  ~bottom: string=?,\n  ~captionSide: string=?,\n  ~clear: string=?,\n  ~clip: string=?,\n  ~color: string=?,\n  ~content: string=?,\n  ~counterIncrement: string=?,\n  ~counterReset: string=?,\n  ~cue: string=?,\n  ~cueAfter: string=?,\n  ~cueBefore: string=?,\n  ~cursor: string=?,\n  ~direction: string=?,\n  ~display: string=?,\n  ~elevation: string=?,\n  ~emptyCells: string=?,\n  ~float: string=?,\n  ~font: string=?,\n  ~fontFamily: string=?,\n  ~fontSize: string=?,\n  ~fontSizeAdjust: string=?,\n  ~fontStretch: string=?,\n  ~fontStyle: string=?,\n  ~fontVariant: string=?,\n  ~fontWeight: string=?,\n  ~height: string=?,\n  ~left: string=?,\n  ~letterSpacing: string=?,\n  ~lineHeight: string=?,\n  ~listStyle: string=?,\n  ~listStyleImage: string=?,\n  ~listStylePosition: string=?,\n  ~listStyleType: string=?,\n  ~margin: string=?,\n  ~marginTop: string=?,\n  ~marginRight: string=?,\n  ~marginBottom: string=?,\n  ~marginLeft: string=?,\n  ~markerOffset: string=?,\n  ~marks: string=?,\n  ~maxHeight: string=?,\n  ~maxWidth: string=?,\n  ~minHeight: string=?,\n  ~minWidth: string=?,\n  ~orphans: string=?,\n  ~outline: string=?,\n  ~outlineColor: string=?,\n  ~outlineStyle: string=?,\n  ~outlineWidth: string=?,\n  ~overflow: string=?,\n  ~overflowX: string=?,\n  ~overflowY: string=?,\n  ~padding: string=?,\n  ~paddingTop: string=?,\n  ~paddingRight: string=?,\n  ~paddingBottom: string=?,\n  ~paddingLeft: string=?,\n  ~page: string=?,\n  ~pageBreakAfter: string=?,\n  ~pageBreakBefore: string=?,\n  ~pageBreakInside: string=?,\n  ~pause: string=?,\n  ~pauseAfter: string=?,\n  ~pauseBefore: string=?,\n  ~pitch: string=?,\n  ~pitchRange: string=?,\n  ~playDuring: string=?,\n  ~position: string=?,\n  ~quotes: string=?,\n  ~richness: string=?,\n  ~right: string=?,\n  ~size: string=?,\n  ~speak: string=?,\n  ~speakHeader: string=?,\n  ~speakNumeral: string=?,\n  ~speakPunctuation: string=?,\n  ~speechRate: string=?,\n  ~stress: string=?,\n  ~tableLayout: string=?,\n  ~textAlign: string=?,\n  ~textDecoration: string=?,\n  ~textIndent: string=?,\n  ~textShadow: string=?,\n  ~textTransform: string=?,\n  ~top: string=?,\n  ~unicodeBidi: string=?,\n  ~verticalAlign: string=?,\n  ~visibility: string=?,\n  ~voiceFamily: string=?,\n  ~volume: string=?,\n  ~whiteSpace: string=?,\n  ~widows: string=?,\n  ~width: string=?,\n  ~wordSpacing: string=?,\n  ~zIndex: string=?,\n  ~opacity: /* Below properties based on https://www.w3.org/Style/CSS/all-properties */\n  string=?,\n  ~backgroundOrigin: /* Backgrounds and Borders Level 3 - CR */\n  string=?,\n  ~backgroundSize: string=?,\n  ~backgroundClip: string=?,\n  ~borderRadius: string=?,\n  ~borderTopLeftRadius: string=?,\n  ~borderTopRightRadius: string=?,\n  ~borderBottomLeftRadius: string=?,\n  ~borderBottomRightRadius: string=?,\n  ~borderImage: string=?,\n  ~borderImageSource: string=?,\n  ~borderImageSlice: string=?,\n  ~borderImageWidth: string=?,\n  ~borderImageOutset: string=?,\n  ~borderImageRepeat: string=?,\n  ~boxShadow: string=?,\n  ~columns: /* Multi-column Layout - CR */\n  string=?,\n  ~columnCount: string=?,\n  ~columnFill: string=?,\n  ~columnGap: string=?,\n  ~columnRule: string=?,\n  ~columnRuleColor: string=?,\n  ~columnRuleStyle: string=?,\n  ~columnRuleWidth: string=?,\n  ~columnSpan: string=?,\n  ~columnWidth: string=?,\n  ~breakAfter: string=?,\n  ~breakBefore: string=?,\n  ~breakInside: string=?,\n  ~rest: /* Speech - CR */\n  string=?,\n  ~restAfter: string=?,\n  ~restBefore: string=?,\n  ~speakAs: string=?,\n  ~voiceBalance: string=?,\n  ~voiceDuration: string=?,\n  ~voicePitch: string=?,\n  ~voiceRange: string=?,\n  ~voiceRate: string=?,\n  ~voiceStress: string=?,\n  ~voiceVolume: string=?,\n  ~objectFit: /* Image Values and Replaced Content Level 3 - CR */\n  string=?,\n  ~objectPosition: string=?,\n  ~imageResolution: string=?,\n  ~imageOrientation: string=?,\n  ~alignContent: /* Flexible Box Layout - CR */\n  string=?,\n  ~alignItems: string=?,\n  ~alignSelf: string=?,\n  ~flex: string=?,\n  ~flexBasis: string=?,\n  ~flexDirection: string=?,\n  ~flexFlow: string=?,\n  ~flexGrow: string=?,\n  ~flexShrink: string=?,\n  ~flexWrap: string=?,\n  ~justifyContent: string=?,\n  ~order: string=?,\n  ~textDecorationColor: /* Text Decoration Level 3 - CR */\n  string=?,\n  ~textDecorationLine: string=?,\n  ~textDecorationSkip: string=?,\n  ~textDecorationStyle: string=?,\n  ~textEmphasis: string=?,\n  ~textEmphasisColor: string=?,\n  ~textEmphasisPosition: string=?,\n  ~textEmphasisStyle: string=?,\n  ~textUnderlinePosition: /* textShadow - already defined by CSS2Properties */\n  string=?,\n  ~fontFeatureSettings: /* Fonts Level 3 - CR */\n  string=?,\n  ~fontKerning: string=?,\n  ~fontLanguageOverride: string=?,\n  ~fontSynthesis: /* fontSizeAdjust - already defined by CSS2Properties */\n  string=?,\n  ~forntVariantAlternates: string=?,\n  ~fontVariantCaps: string=?,\n  ~fontVariantEastAsian: string=?,\n  ~fontVariantLigatures: string=?,\n  ~fontVariantNumeric: string=?,\n  ~fontVariantPosition: string=?,\n  ~all: /* Cascading and Inheritance Level 3 - CR */\n  string=?,\n  ~glyphOrientationVertical: /* Writing Modes Level 3 - CR */\n  string=?,\n  ~textCombineUpright: string=?,\n  ~textOrientation: string=?,\n  ~writingMode: string=?,\n  ~shapeImageThreshold: /* Shapes Level 1 - CR */\n  string=?,\n  ~shapeMargin: string=?,\n  ~shapeOutside: string=?,\n  ~clipPath: /* Masking Level 1 - CR */\n  string=?,\n  ~clipRule: string=?,\n  ~mask: string=?,\n  ~maskBorder: string=?,\n  ~maskBorderMode: string=?,\n  ~maskBorderOutset: string=?,\n  ~maskBorderRepeat: string=?,\n  ~maskBorderSlice: string=?,\n  ~maskBorderSource: string=?,\n  ~maskBorderWidth: string=?,\n  ~maskClip: string=?,\n  ~maskComposite: string=?,\n  ~maskImage: string=?,\n  ~maskMode: string=?,\n  ~maskOrigin: string=?,\n  ~maskPosition: string=?,\n  ~maskRepeat: string=?,\n  ~maskSize: string=?,\n  ~maskType: string=?,\n  ~backgroundBlendMode: /* Compositing and Blending Level 1 - CR */\n  string=?,\n  ~isolation: string=?,\n  ~mixBlendMode: string=?,\n  ~boxDecorationBreak: /* Fragmentation Level 3 - CR */\n  string=?,\n  ~boxSizing: /* breakAfter - already defined by Multi-column Layout */\n  string=?,\n  ~caretColor: string=?,\n  ~navDown: string=?,\n  ~navLeft: string=?,\n  ~navRight: string=?,\n  ~navUp: string=?,\n  ~outlineOffset: string=?,\n  ~resize: string=?,\n  ~textOverflow: string=?,\n  ~grid: /* Grid Layout Level 1 - CR */\n  string=?,\n  ~gridArea: string=?,\n  ~gridAutoColumns: string=?,\n  ~gridAutoFlow: string=?,\n  ~gridAutoRows: string=?,\n  ~gridColumn: string=?,\n  ~gridColumnEnd: string=?,\n  ~gridColumnGap: string=?,\n  ~gridColumnStart: string=?,\n  ~gridGap: string=?,\n  ~gridRow: string=?,\n  ~gridRowEnd: string=?,\n  ~gridRowGap: string=?,\n  ~gridRowStart: string=?,\n  ~gridTemplate: string=?,\n  ~gridTemplateAreas: string=?,\n  ~gridTemplateColumns: string=?,\n  ~gridTemplateRows: string=?,\n  ~willChange: /* Will Change Level 1 - CR */\n  string=?,\n  ~hangingPunctuation: /* Text Level 3 - LC */\n  string=?,\n  ~hyphens: string=?,\n  ~lineBreak: /* letterSpacing - already defined by CSS2Properties */\n  string=?,\n  ~overflowWrap: string=?,\n  ~tabSize: string=?,\n  ~textAlignLast: /* textAlign - already defined by CSS2Properties */\n  string=?,\n  ~textJustify: string=?,\n  ~wordBreak: string=?,\n  ~wordWrap: string=?,\n  ~animation: /* Animations - WD */\n  string=?,\n  ~animationDelay: string=?,\n  ~animationDirection: string=?,\n  ~animationDuration: string=?,\n  ~animationFillMode: string=?,\n  ~animationIterationCount: string=?,\n  ~animationName: string=?,\n  ~animationPlayState: string=?,\n  ~animationTimingFunction: string=?,\n  ~transition: /* Transitions - WD */\n  string=?,\n  ~transitionDelay: string=?,\n  ~transitionDuration: string=?,\n  ~transitionProperty: string=?,\n  ~transitionTimingFunction: string=?,\n  ~backfaceVisibility: /* Transforms Level 1 - WD */\n  string=?,\n  ~perspective: string=?,\n  ~perspectiveOrigin: string=?,\n  ~transform: string=?,\n  ~transformOrigin: string=?,\n  ~transformStyle: string=?,\n  ~justifyItems: /* Box Alignment Level 3 - WD */\n  string=?,\n  ~justifySelf: string=?,\n  ~placeContent: string=?,\n  ~placeItems: string=?,\n  ~placeSelf: string=?,\n  ~appearance: /* Basic User Interface Level 4 - FPWD */\n  string=?,\n  ~caret: string=?,\n  ~caretAnimation: string=?,\n  ~caretShape: string=?,\n  ~userSelect: string=?,\n  ~maxLines: /* Overflow Level 3 - WD */\n  string=?,\n  ~marqueeDirection: /* Basix Box Model - WD */\n  string=?,\n  ~marqueeLoop: string=?,\n  ~marqueeSpeed: string=?,\n  ~marqueeStyle: string=?,\n  ~overflowStyle: string=?,\n  ~rotation: string=?,\n  ~rotationPoint: string=?,\n  ~alignmentBaseline: /* SVG 1.1 - REC */\n  string=?,\n  ~baselineShift: string=?,\n  ~clip: string=?,\n  ~clipPath: string=?,\n  ~clipRule: string=?,\n  ~colorInterpolation: string=?,\n  ~colorInterpolationFilters: string=?,\n  ~colorProfile: string=?,\n  ~colorRendering: string=?,\n  ~cursor: string=?,\n  ~dominantBaseline: string=?,\n  ~fill: string=?,\n  ~fillOpacity: string=?,\n  ~fillRule: string=?,\n  ~filter: string=?,\n  ~floodColor: string=?,\n  ~floodOpacity: string=?,\n  ~glyphOrientationHorizontal: string=?,\n  ~glyphOrientationVertical: string=?,\n  ~imageRendering: string=?,\n  ~kerning: string=?,\n  ~lightingColor: string=?,\n  ~markerEnd: string=?,\n  ~markerMid: string=?,\n  ~markerStart: string=?,\n  ~pointerEvents: string=?,\n  ~shapeRendering: string=?,\n  ~stopColor: string=?,\n  ~stopOpacity: string=?,\n  ~stroke: string=?,\n  ~strokeDasharray: string=?,\n  ~strokeDashoffset: string=?,\n  ~strokeLinecap: string=?,\n  ~strokeLinejoin: string=?,\n  ~strokeMiterlimit: string=?,\n  ~strokeOpacity: string=?,\n  ~strokeWidth: string=?,\n  ~textAnchor: string=?,\n  ~textRendering: string=?,\n  ~rubyAlign: /* Ruby Layout Level 1 - WD */\n  string=?,\n  ~rubyMerge: string=?,\n  ~rubyPosition: string=?,\n   * -------------\n   * Generated Content for Paged Media - WD\n   * Generated Content Level 3 - WD\n   * Line Grid Level 1 - WD\n   * Regions - WD\n   * Inline Layout Level 3 - WD\n   * Round Display Level 1 - WD\n   * Image Values and Replaced Content Level 4 - WD\n   * Positioned Layout Level 3 - WD\n   * Filter Effects Level 1 -  -WD\n   * Exclusions Level 1 - WD\n   * Text Level 4 - FPWD\n   * SVG Markers - FPWD\n   * Motion Path Level 1 - FPWD\n   * Color Level 4 - FPWD\n   * SVG Strokes - FPWD\n   * Table Level 3 - FPWD\n   */\n  unit,\n) => t = \"\""
      ]
    ]
  },
  {
    "moduleName": "ReactTestUtils",
    "addedFunctions": [],
    "modifiedFunctions": [
      [
        "act",
        "let act: (unit => unit) => unit = func => {\n  let reactFunc = (. ()) => {\n    func()\n    undefined\n  }\n  reactAct(reactFunc)\n}",
        "let act: (unit => unit) => unit = func => {\n  let reactFunc = () => {\n    func()\n    undefined\n  }\n  reactAct(reactFunc)\n}"
      ],
      [
        "actAsync",
        "let actAsync = func => {\n  let reactFunc = (. ()) => func()\n  reactActAsync(reactFunc)\n}",
        "let actAsync = func => {\n  let reactFunc = () => func()\n  reactActAsync(reactFunc)\n}"
      ],
      [
        "prepareContainer",
        "let prepareContainer = (container: ref<option<Dom.element>>, ()) => {\n  open Belt\n  let containerElement = document->createElement(\"div\")\n  let _ = document->body->Option.map(body => body->appendChild(containerElement))\n  container := Some(containerElement)\n}",
        "let prepareContainer = (container: ref<option<Dom.element>>, ()) => {\n  let containerElement = document->createElement(\"div\")\n  switch document->body {\n  | Some(body) => body->appendChild(containerElement)->ignore\n  | None => ()\n  }\n  container := Some(containerElement)\n}"
      ],
      [
        "cleanupContainer",
        "let cleanupContainer = (container: ref<option<Dom.element>>, ()) => {\n  open Belt\n  let _ = container.contents->Option.map(remove)\n  container := None\n}",
        "let cleanupContainer = (container: ref<option<Dom.element>>, ()) => {\n  switch container.contents {\n  | Some(contents) => remove(contents)\n  | None => ()\n  }\n  container := None\n}"
      ],
      [
        "getContainer",
        "let getContainer = container => {\n  open Belt\n  container.contents->Option.getExn\n}",
        "let getContainer = container =>\n  switch container.contents {\n  | Some(contents) => contents\n  | None => raise(Not_found)\n  }"
      ]
    ],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [],
    "modifiedExternals": [
      [
        "reactAct",
        "external reactAct: ((. unit) => undefined) => unit = \"act\"",
        "external reactAct: (unit => undefined) => unit = \"act\""
      ],
      [
        "reactActAsync",
        "external reactActAsync: ((. unit) => Js.Promise.t<'a>) => Js.Promise.t<unit> = \"act\"",
        "external reactActAsync: (unit => Js.Promise.t<'a>) => Js.Promise.t<unit> = \"act\""
      ],
      [
        "value",
        "  external value: Dom.element => option<string> = \"value\"\n  let findBySelector = (element, selector) => querySelector(element, selector)\n  let findByAllSelector = (element, selector) => querySelectorAll(element, selector)\n  let findBySelectorAndTextContent = (element, selector, content) =>\n    querySelectorAll(element, selector)->Array.getBy(node => node->textContent === content)\n  let findBySelectorAndPartialTextContent = (element, selector, content) =>\n    querySelectorAll(element, selector)->Array.getBy(node =>\n      node->textContent->Js.String2.includes(content)\n    )\n}",
        "  external value: Dom.element => option<string> = \"value\"\n  let findBySelector = (element, selector) => querySelector(element, selector)\n  let findByAllSelector = (element, selector) => querySelectorAll(element, selector)\n  let findBySelectorAndTextContent = (element, selector, content) =>\n    querySelectorAll(element, selector)->Js.Array2.find(node => node->textContent === content)\n  let findBySelectorAndPartialTextContent = (element, selector, content) =>\n    querySelectorAll(element, selector)->Js.Array2.find(node =>\n      node->textContent->Js.String2.includes(content)\n    )\n}"
      ]
    ],
    "deletedExternals": []
  },
  {
    "moduleName": "RescriptReactErrorBoundary",
    "addedFunctions": [
      [
        "noOp",
        "let noOp: reactComponentClass => unit = %raw(`function (_x) {}`)"
      ],
      [
        "reactComponentClass",
        "let reactComponentClass = component"
      ]
    ],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [
      [
        "reactComponentClass",
        "type reactComponentClass"
      ]
    ],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": []
  },
  {
    "moduleName": "RescriptReactRouter",
    "addedFunctions": [],
    "modifiedFunctions": [
      [
        "arrayToList",
        "let arrayToList = a => {\n  let rec tolist = (i, res) =>\n    if i < 0 {\n      res\n    } else {\n      tolist(i - 1, list{Array.unsafe_get(a, i), ...res})\n    }\n  tolist(Array.length(a) - 1, list{})\n}",
        "let arrayToList = a => {\n  let rec tolist = (i, res) =>\n    if i < 0 {\n      res\n    } else {\n      tolist(i - 1, list{a->Js.Array2.unsafe_get(i), ...res})\n    }\n  tolist(a->Js.Array2.length - 1, list{})\n}"
      ],
      [
        "pathParse",
        "let pathParse = str =>\n  switch str {\n  | \"\"\n  | \"/\" => list{}\n  | raw =>\n    let raw = Js.String.sliceToEnd(~from=1, raw)\n    let raw = switch Js.String.get(raw, Js.String.length(raw) - 1) {\n    | \"/\" => Js.String.slice(~from=0, ~to_=-1, raw)\n    | _ => raw\n    }\n    let raw = switch raw |> Js.String.splitAtMost(\"?\", ~limit=2) {\n    | [path, _] => path\n    | _ => raw\n    }\n    raw |> Js.String.split(\"/\") |> Js.Array.filter(item => String.length(item) != 0) |> arrayToList\n  }",
        "let pathParse = str =>\n  switch str {\n  | \"\"\n  | \"/\" =>\n    list{}\n  | raw =>\n    let raw = raw->Js.String2.sliceToEnd(~from=1)\n    let raw = switch raw->Js.String2.get(raw->Js.String2.length - 1) {\n    | \"/\" => raw->Js.String2.slice(~from=0, ~to_=-1)\n    | _ => raw\n    }\n    let raw = switch raw->Js.String2.splitAtMost(\"?\", ~limit=2) {\n    | [path, _] => path\n    | _ => raw\n    }\n    raw->Js.String2.split(\"/\")->Js.Array2.filter(item => item->Js.String2.length != 0)->arrayToList\n  }"
      ],
      [
        "path",
        "let path = (~serverUrlString=?, ()) =>\n  switch (serverUrlString, %external(window)) {\n  | (None, None) => list{}\n  | (Some(serverUrlString), _) => pathParse(serverUrlString)\n  | (_, Some(window: Dom.window)) => pathParse(window |> location |> pathname)\n  }",
        "let path = (~serverUrlString=?, ()) =>\n  switch (serverUrlString, window) {\n  | (None, None) => list{}\n  | (Some(serverUrlString), _) => pathParse(serverUrlString)\n  | (_, Some(window: Dom.window)) => pathParse(window->location->pathname)\n  }"
      ],
      [
        "hash",
        "let hash = () =>\n  switch %external(window) {\n  | None => \"\"\n  | Some(window: Dom.window) =>\n    switch window |> location |> hash {\n    | \"\"\n    | \"#\" => \"\"\n    | raw =>\n       Why is this even included in location.hash?? */\n      raw |> Js.String.sliceToEnd(~from=1)\n    }\n  }",
        "let hash = () =>\n  switch window {\n  | None => \"\"\n  | Some(window: Dom.window) =>\n    switch window->location->hash {\n    | \"\"\n    | \"#\" => \"\"\n    | raw =>\n       Why is this even included in location.hash?? */\n      raw->Js.String2.sliceToEnd(~from=1)\n    }\n  }"
      ],
      [
        "searchParse",
        "let searchParse = str =>\n  switch str {\n  | \"\"\n  | \"?\" => \"\"\n  | raw =>\n    switch raw |> Js.String.splitAtMost(\"?\", ~limit=2) {\n    | [_, search] => search\n    | _ => \"\"\n    }\n  }",
        "let searchParse = str =>\n  switch str {\n  | \"\"\n  | \"?\" => \"\"\n  | raw =>\n    switch raw->Js.String2.splitAtMost(\"?\", ~limit=2) {\n    | [_, search] => search\n    | _ => \"\"\n    }\n  }"
      ],
      [
        "search",
        "let search = (~serverUrlString=?, ()) =>\n  switch (serverUrlString, %external(window)) {\n  | (None, None) => \"\"\n  | (Some(serverUrlString), _) => searchParse(serverUrlString)\n  | (_, Some(window: Dom.window)) => searchParse(window |> location |> search)\n  }",
        "let search = (~serverUrlString=?, ()) =>\n  switch (serverUrlString, window) {\n  | (None, None) => \"\"\n  | (Some(serverUrlString), _) => searchParse(serverUrlString)\n  | (_, Some(window: Dom.window)) => searchParse(window->location->search)\n  }"
      ],
      [
        "push",
        "let push = path =>\n  switch (%external(history), %external(window)) {\n  | (None, _)\n  | (_, None) => ()\n  | (Some(history: Dom.history), Some(window: Dom.window)) =>\n    pushState(history, ~href=path)\n    dispatchEvent(window, safeMakeEvent(\"popstate\"))\n  }",
        "let push = path =>\n  switch (history, window) {\n  | (None, _)\n  | (_, None) => ()\n  | (Some(history: Dom.history), Some(window: Dom.window)) =>\n    pushState(history, ~href=path)\n    dispatchEvent(window, safeMakeEvent(\"popstate\"))\n  }"
      ],
      [
        "replace",
        "let replace = path =>\n  switch (%external(history), %external(window)) {\n  | (None, _)\n  | (_, None) => ()\n  | (Some(history: Dom.history), Some(window: Dom.window)) =>\n    replaceState(history, ~href=path)\n    dispatchEvent(window, safeMakeEvent(\"popstate\"))\n  }",
        "let replace = path =>\n  switch (history, window) {\n  | (None, _)\n  | (_, None) => ()\n  | (Some(history: Dom.history), Some(window: Dom.window)) =>\n    replaceState(history, ~href=path)\n    dispatchEvent(window, safeMakeEvent(\"popstate\"))\n  }"
      ],
      [
        "watchUrl",
        "let watchUrl = callback =>\n  switch %external(window) {\n  | None => () => ()\n  | Some(window: Dom.window) =>\n    let watcherID = () => callback(url())\n    addEventListener(window, \"popstate\", watcherID)\n    watcherID\n  }",
        "let watchUrl = callback =>\n  switch window {\n  | None => () => ()\n  | Some(window: Dom.window) =>\n    let watcherID = () => callback(url())\n    addEventListener(window, \"popstate\", watcherID)\n    watcherID\n  }"
      ],
      [
        "unwatchUrl",
        "let unwatchUrl = watcherID =>\n  switch %external(window) {\n  | None => ()\n  | Some(window: Dom.window) => removeEventListener(window, \"popstate\", watcherID)\n  }",
        "let unwatchUrl = watcherID =>\n  switch window {\n  | None => ()\n  | Some(window: Dom.window) => removeEventListener(window, \"popstate\", watcherID)\n  }"
      ],
      [
        "useUrl",
        "let useUrl = (~serverUrl=?, ()) => {\n  let (url, setUrl) = React.useState(() =>\n    switch serverUrl {\n    | Some(url) => url\n    | None => dangerouslyGetInitialUrl()\n    }\n  )\n  React.useEffect0(() => {\n    let watcherId = watchUrl(url => setUrl(_ => url))\n    let newUrl = dangerouslyGetInitialUrl()\n    if urlNotEqual(newUrl, url) {\n      setUrl(_ => newUrl)\n    }\n    Some(() => unwatchUrl(watcherId))\n  })\n  url\n}",
        "let useUrl = (~serverUrl=?, ()) => {\n  let (url, setUrl) = React.useState(() =>\n    switch serverUrl {\n    | Some(url) => url\n    | None => dangerouslyGetInitialUrl()\n    }\n  )\n  React.useEffect(() => {\n    let watcherId = watchUrl(url => setUrl(_ => url))\n    let newUrl = dangerouslyGetInitialUrl()\n    if urlNotEqual(newUrl, url) {\n      setUrl(_ => newUrl)\n    }\n    Some(() => unwatchUrl(watcherId))\n  }, [])\n  url\n}"
      ]
    ],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [
      [
        "window",
        "external window: option<Dom.window> = \"window\""
      ],
      [
        "history",
        "external history: option<Dom.history> = \"history\""
      ]
    ],
    "modifiedExternals": [],
    "deletedExternals": []
  },
  {
    "moduleName": "ReactDOMRe",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "createDOMElementVariadic",
        "external createDOMElementVariadic: (\n  string,\n  ~props: domProps=?,\n  array<React.element>,\n) => React.element = \"createElement\""
      ],
      [
        "createElement",
        "external createElement: (string, ~props: props=?, array<React.element>) => React.element ="
      ]
    ]
  },
  {
    "moduleName": "ReasonReact",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": []
  },
  {
    "moduleName": "ReactDOMStyleV3",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [
      [
        "unsafeAddProp",
        "let unsafeAddProp = (style, key, value) => {\n  let dict = Js.Dict.empty()\n  Js.Dict.set(dict, key, value)\n  combine(style, _dictToStyle(dict))\n}"
      ]
    ],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [
      [
        "t",
        "type t = ReactDOMStyle.t"
      ]
    ],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "make",
        "external make: (\n  ~azimuth: string=?,\n  ~background: string=?,\n  ~backgroundAttachment: string=?,\n  ~backgroundColor: string=?,\n  ~backgroundImage: string=?,\n  ~backgroundPosition: string=?,\n  ~backgroundRepeat: string=?,\n  ~border: string=?,\n  ~borderCollapse: string=?,\n  ~borderColor: string=?,\n  ~borderSpacing: string=?,\n  ~borderStyle: string=?,\n  ~borderTop: string=?,\n  ~borderRight: string=?,\n  ~borderBottom: string=?,\n  ~borderLeft: string=?,\n  ~borderTopColor: string=?,\n  ~borderRightColor: string=?,\n  ~borderBottomColor: string=?,\n  ~borderLeftColor: string=?,\n  ~borderTopStyle: string=?,\n  ~borderRightStyle: string=?,\n  ~borderBottomStyle: string=?,\n  ~borderLeftStyle: string=?,\n  ~borderTopWidth: string=?,\n  ~borderRightWidth: string=?,\n  ~borderBottomWidth: string=?,\n  ~borderLeftWidth: string=?,\n  ~borderWidth: string=?,\n  ~bottom: string=?,\n  ~captionSide: string=?,\n  ~clear: string=?,\n  ~clip: string=?,\n  ~color: string=?,\n  ~content: string=?,\n  ~counterIncrement: string=?,\n  ~counterReset: string=?,\n  ~cue: string=?,\n  ~cueAfter: string=?,\n  ~cueBefore: string=?,\n  ~cursor: string=?,\n  ~direction: string=?,\n  ~display: string=?,\n  ~elevation: string=?,\n  ~emptyCells: string=?,\n  ~float: string=?,\n  ~font: string=?,\n  ~fontFamily: string=?,\n  ~fontSize: string=?,\n  ~fontSizeAdjust: string=?,\n  ~fontStretch: string=?,\n  ~fontStyle: string=?,\n  ~fontVariant: string=?,\n  ~fontWeight: string=?,\n  ~height: string=?,\n  ~left: string=?,\n  ~letterSpacing: string=?,\n  ~lineHeight: string=?,\n  ~listStyle: string=?,\n  ~listStyleImage: string=?,\n  ~listStylePosition: string=?,\n  ~listStyleType: string=?,\n  ~margin: string=?,\n  ~marginTop: string=?,\n  ~marginRight: string=?,\n  ~marginBottom: string=?,\n  ~marginLeft: string=?,\n  ~markerOffset: string=?,\n  ~marks: string=?,\n  ~maxHeight: string=?,\n  ~maxWidth: string=?,\n  ~minHeight: string=?,\n  ~minWidth: string=?,\n  ~orphans: string=?,\n  ~outline: string=?,\n  ~outlineColor: string=?,\n  ~outlineStyle: string=?,\n  ~outlineWidth: string=?,\n  ~overflow: string=?,\n  ~overflowX: string=?,\n  ~overflowY: string=?,\n  ~padding: string=?,\n  ~paddingTop: string=?,\n  ~paddingRight: string=?,\n  ~paddingBottom: string=?,\n  ~paddingLeft: string=?,\n  ~page: string=?,\n  ~pageBreakAfter: string=?,\n  ~pageBreakBefore: string=?,\n  ~pageBreakInside: string=?,\n  ~pause: string=?,\n  ~pauseAfter: string=?,\n  ~pauseBefore: string=?,\n  ~pitch: string=?,\n  ~pitchRange: string=?,\n  ~playDuring: string=?,\n  ~position: string=?,\n  ~quotes: string=?,\n  ~richness: string=?,\n  ~right: string=?,\n  ~size: string=?,\n  ~speak: string=?,\n  ~speakHeader: string=?,\n  ~speakNumeral: string=?,\n  ~speakPunctuation: string=?,\n  ~speechRate: string=?,\n  ~stress: string=?,\n  ~tableLayout: string=?,\n  ~textAlign: string=?,\n  ~textDecoration: string=?,\n  ~textIndent: string=?,\n  ~textShadow: string=?,\n  ~textTransform: string=?,\n  ~top: string=?,\n  ~unicodeBidi: string=?,\n  ~verticalAlign: string=?,\n  ~visibility: string=?,\n  ~voiceFamily: string=?,\n  ~volume: string=?,\n  ~whiteSpace: string=?,\n  ~widows: string=?,\n  ~width: string=?,\n  ~wordSpacing: string=?,\n  ~zIndex: string=?,\n  ~opacity: /* Below properties based on https://www.w3.org/Style/CSS/all-properties */\n  string=?,\n  ~backgroundOrigin: /* Backgrounds and Borders Level 3 - CR */\n  string=?,\n  ~backgroundSize: string=?,\n  ~backgroundClip: string=?,\n  ~borderRadius: string=?,\n  ~borderTopLeftRadius: string=?,\n  ~borderTopRightRadius: string=?,\n  ~borderBottomLeftRadius: string=?,\n  ~borderBottomRightRadius: string=?,\n  ~borderImage: string=?,\n  ~borderImageSource: string=?,\n  ~borderImageSlice: string=?,\n  ~borderImageWidth: string=?,\n  ~borderImageOutset: string=?,\n  ~borderImageRepeat: string=?,\n  ~boxShadow: string=?,\n  ~columns: /* Multi-column Layout - CR */\n  string=?,\n  ~columnCount: string=?,\n  ~columnFill: string=?,\n  ~columnGap: string=?,\n  ~columnRule: string=?,\n  ~columnRuleColor: string=?,\n  ~columnRuleStyle: string=?,\n  ~columnRuleWidth: string=?,\n  ~columnSpan: string=?,\n  ~columnWidth: string=?,\n  ~breakAfter: string=?,\n  ~breakBefore: string=?,\n  ~breakInside: string=?,\n  ~rest: /* Speech - CR */\n  string=?,\n  ~restAfter: string=?,\n  ~restBefore: string=?,\n  ~speakAs: string=?,\n  ~voiceBalance: string=?,\n  ~voiceDuration: string=?,\n  ~voicePitch: string=?,\n  ~voiceRange: string=?,\n  ~voiceRate: string=?,\n  ~voiceStress: string=?,\n  ~voiceVolume: string=?,\n  ~objectFit: /* Image Values and Replaced Content Level 3 - CR */\n  string=?,\n  ~objectPosition: string=?,\n  ~imageResolution: string=?,\n  ~imageOrientation: string=?,\n  ~alignContent: /* Flexible Box Layout - CR */\n  string=?,\n  ~alignItems: string=?,\n  ~alignSelf: string=?,\n  ~flex: string=?,\n  ~flexBasis: string=?,\n  ~flexDirection: string=?,\n  ~flexFlow: string=?,\n  ~flexGrow: string=?,\n  ~flexShrink: string=?,\n  ~flexWrap: string=?,\n  ~justifyContent: string=?,\n  ~order: string=?,\n  ~textDecorationColor: /* Text Decoration Level 3 - CR */\n  string=?,\n  ~textDecorationLine: string=?,\n  ~textDecorationSkip: string=?,\n  ~textDecorationStyle: string=?,\n  ~textEmphasis: string=?,\n  ~textEmphasisColor: string=?,\n  ~textEmphasisPosition: string=?,\n  ~textEmphasisStyle: string=?,\n  ~textUnderlinePosition: /* textShadow - already defined by CSS2Properties */\n  string=?,\n  ~fontFeatureSettings: /* Fonts Level 3 - CR */\n  string=?,\n  ~fontKerning: string=?,\n  ~fontLanguageOverride: string=?,\n  ~fontSynthesis: /* fontSizeAdjust - already defined by CSS2Properties */\n  string=?,\n  ~forntVariantAlternates: string=?,\n  ~fontVariantCaps: string=?,\n  ~fontVariantEastAsian: string=?,\n  ~fontVariantLigatures: string=?,\n  ~fontVariantNumeric: string=?,\n  ~fontVariantPosition: string=?,\n  ~all: /* Cascading and Inheritance Level 3 - CR */\n  string=?,\n  ~glyphOrientationVertical: /* Writing Modes Level 3 - CR */\n  string=?,\n  ~textCombineUpright: string=?,\n  ~textOrientation: string=?,\n  ~writingMode: string=?,\n  ~shapeImageThreshold: /* Shapes Level 1 - CR */\n  string=?,\n  ~shapeMargin: string=?,\n  ~shapeOutside: string=?,\n  ~clipPath: /* Masking Level 1 - CR */\n  string=?,\n  ~clipRule: string=?,\n  ~mask: string=?,\n  ~maskBorder: string=?,\n  ~maskBorderMode: string=?,\n  ~maskBorderOutset: string=?,\n  ~maskBorderRepeat: string=?,\n  ~maskBorderSlice: string=?,\n  ~maskBorderSource: string=?,\n  ~maskBorderWidth: string=?,\n  ~maskClip: string=?,\n  ~maskComposite: string=?,\n  ~maskImage: string=?,\n  ~maskMode: string=?,\n  ~maskOrigin: string=?,\n  ~maskPosition: string=?,\n  ~maskRepeat: string=?,\n  ~maskSize: string=?,\n  ~maskType: string=?,\n  ~backgroundBlendMode: /* Compositing and Blending Level 1 - CR */\n  string=?,\n  ~isolation: string=?,\n  ~mixBlendMode: string=?,\n  ~boxDecorationBreak: /* Fragmentation Level 3 - CR */\n  string=?,\n  ~boxSizing: /* breakAfter - already defined by Multi-column Layout */\n  string=?,\n  ~caretColor: string=?,\n  ~navDown: string=?,\n  ~navLeft: string=?,\n  ~navRight: string=?,\n  ~navUp: string=?,\n  ~outlineOffset: string=?,\n  ~resize: string=?,\n  ~textOverflow: string=?,\n  ~grid: /* Grid Layout Level 1 - CR */\n  string=?,\n  ~gridArea: string=?,\n  ~gridAutoColumns: string=?,\n  ~gridAutoFlow: string=?,\n  ~gridAutoRows: string=?,\n  ~gridColumn: string=?,\n  ~gridColumnEnd: string=?,\n  ~gridColumnGap: string=?,\n  ~gridColumnStart: string=?,\n  ~gridGap: string=?,\n  ~gridRow: string=?,\n  ~gridRowEnd: string=?,\n  ~gridRowGap: string=?,\n  ~gridRowStart: string=?,\n  ~gridTemplate: string=?,\n  ~gridTemplateAreas: string=?,\n  ~gridTemplateColumns: string=?,\n  ~gridTemplateRows: string=?,\n  ~willChange: /* Will Change Level 1 - CR */\n  string=?,\n  ~hangingPunctuation: /* Text Level 3 - LC */\n  string=?,\n  ~hyphens: string=?,\n  ~lineBreak: /* letterSpacing - already defined by CSS2Properties */\n  string=?,\n  ~overflowWrap: string=?,\n  ~tabSize: string=?,\n  ~textAlignLast: /* textAlign - already defined by CSS2Properties */\n  string=?,\n  ~textJustify: string=?,\n  ~wordBreak: string=?,\n  ~wordWrap: string=?,\n  ~animation: /* Animations - WD */\n  string=?,\n  ~animationDelay: string=?,\n  ~animationDirection: string=?,\n  ~animationDuration: string=?,\n  ~animationFillMode: string=?,\n  ~animationIterationCount: string=?,\n  ~animationName: string=?,\n  ~animationPlayState: string=?,\n  ~animationTimingFunction: string=?,\n  ~transition: /* Transitions - WD */\n  string=?,\n  ~transitionDelay: string=?,\n  ~transitionDuration: string=?,\n  ~transitionProperty: string=?,\n  ~transitionTimingFunction: string=?,\n  ~backfaceVisibility: /* Transforms Level 1 - WD */\n  string=?,\n  ~perspective: string=?,\n  ~perspectiveOrigin: string=?,\n  ~transform: string=?,\n  ~transformOrigin: string=?,\n  ~transformStyle: string=?,\n  ~justifyItems: /* Box Alignment Level 3 - WD */\n  string=?,\n  ~justifySelf: string=?,\n  ~placeContent: string=?,\n  ~placeItems: string=?,\n  ~placeSelf: string=?,\n  ~appearance: /* Basic User Interface Level 4 - FPWD */\n  string=?,\n  ~caret: string=?,\n  ~caretAnimation: string=?,\n  ~caretShape: string=?,\n  ~userSelect: string=?,\n  ~maxLines: /* Overflow Level 3 - WD */\n  string=?,\n  ~marqueeDirection: /* Basix Box Model - WD */\n  string=?,\n  ~marqueeLoop: string=?,\n  ~marqueeSpeed: string=?,\n  ~marqueeStyle: string=?,\n  ~overflowStyle: string=?,\n  ~rotation: string=?,\n  ~rotationPoint: string=?,\n  ~alignmentBaseline: /* SVG 1.1 - REC */\n  string=?,\n  ~baselineShift: string=?,\n  ~clip: string=?,\n  ~clipPath: string=?,\n  ~clipRule: string=?,\n  ~colorInterpolation: string=?,\n  ~colorInterpolationFilters: string=?,\n  ~colorProfile: string=?,\n  ~colorRendering: string=?,\n  ~cursor: string=?,\n  ~dominantBaseline: string=?,\n  ~fill: string=?,\n  ~fillOpacity: string=?,\n  ~fillRule: string=?,\n  ~filter: string=?,\n  ~floodColor: string=?,\n  ~floodOpacity: string=?,\n  ~glyphOrientationHorizontal: string=?,\n  ~glyphOrientationVertical: string=?,\n  ~imageRendering: string=?,\n  ~kerning: string=?,\n  ~lightingColor: string=?,\n  ~markerEnd: string=?,\n  ~markerMid: string=?,\n  ~markerStart: string=?,\n  ~pointerEvents: string=?,\n  ~shapeRendering: string=?,\n  ~stopColor: string=?,\n  ~stopOpacity: string=?,\n  ~stroke: string=?,\n  ~strokeDasharray: string=?,\n  ~strokeDashoffset: string=?,\n  ~strokeLinecap: string=?,\n  ~strokeLinejoin: string=?,\n  ~strokeMiterlimit: string=?,\n  ~strokeOpacity: string=?,\n  ~strokeWidth: string=?,\n  ~textAnchor: string=?,\n  ~textRendering: string=?,\n  ~rubyAlign: /* Ruby Layout Level 1 - WD */\n  string=?,\n  ~rubyMerge: string=?,\n  ~rubyPosition: string=?,\n   * -------------\n   * Generated Content for Paged Media - WD\n   * Generated Content Level 3 - WD\n   * Line Grid Level 1 - WD\n   * Regions - WD\n   * Inline Layout Level 3 - WD\n   * Round Display Level 1 - WD\n   * Image Values and Replaced Content Level 4 - WD\n   * Positioned Layout Level 3 - WD\n   * Filter Effects Level 1 -  -WD\n   * Exclusions Level 1 - WD\n   * Text Level 4 - FPWD\n   * SVG Markers - FPWD\n   * Motion Path Level 1 - FPWD\n   * Color Level 4 - FPWD\n   * SVG Strokes - FPWD\n   * Table Level 3 - FPWD\n   */\n  unit,\n) => t = \"\""
      ],
      [
        "combine",
        "external combine: (@as(json`{}`) _, t, t) => t = \"Object.assign\""
      ],
      [
        "_dictToStyle",
        "external _dictToStyle: Js.Dict.t<string> => t = \"%identity\""
      ],
      [
        "unsafeAddStyle",
        "external unsafeAddStyle: (@as(json`{}`) _, t, {..}) => t = \"Object.assign\""
      ]
    ]
  },
  {
    "moduleName": "ReactDOMV3",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [
      [
        "root",
        "  type root = ReactDOM.Experimental.root\n  @module(\"react-dom\")\n  external createRoot: Dom.element => root = \"createRoot\"\n  @module(\"react-dom\")\n  external createBlockingRoot: Dom.element => root = \"createBlockingRoot\"\n  @send external render: (root, React.element) => unit = \"render\"\n}"
      ],
      [
        "style",
        "type style = ReactDOMStyle.t"
      ],
      [
        "domRef",
        "type domRef = ReactDOM.domRef"
      ],
      [
        "t",
        "  type t = domRef\n  type currentDomRef = React.ref<Js.nullable<Dom.element>>\n  type callbackDomRef = Js.nullable<Dom.element> => unit\n  external domRef: currentDomRef => domRef = \"%identity\"\n  external callbackDomRef: callbackDomRef => domRef = \"%identity\"\n}"
      ],
      [
        "domProps",
        "  type domProps = {\n    @optional\n    key: string,\n    @optional\n    ref: domRef,\n    @optional @as(\"aria-details\")\n    ariaDetails: string,\n    @optional @as(\"aria-disabled\")\n    ariaDisabled: bool,\n    @optional @as(\"aria-hidden\")\n    ariaHidden: bool,\n    @optional @as(\"aria-keyshortcuts\")\n    ariaKeyshortcuts: string,\n    @optional @as(\"aria-label\")\n    ariaLabel: string,\n    @optional @as(\"aria-roledescription\")\n    ariaRoledescription: string,\n    @optional @as(\"aria-expanded\")\n    ariaExpanded: bool,\n    @optional @as(\"aria-level\")\n    ariaLevel: int,\n    @optional @as(\"aria-modal\")\n    ariaModal: bool,\n    @optional @as(\"aria-multiline\")\n    ariaMultiline: bool,\n    @optional @as(\"aria-multiselectable\")\n    ariaMultiselectable: bool,\n    @optional @as(\"aria-placeholder\")\n    ariaPlaceholder: string,\n    @optional @as(\"aria-readonly\")\n    ariaReadonly: bool,\n    @optional @as(\"aria-required\")\n    ariaRequired: bool,\n    @optional @as(\"aria-selected\")\n    ariaSelected: bool,\n    @optional @as(\"aria-sort\")\n    ariaSort: string,\n    @optional @as(\"aria-valuemax\")\n    ariaValuemax: float,\n    @optional @as(\"aria-valuemin\")\n    ariaValuemin: float,\n    @optional @as(\"aria-valuenow\")\n    ariaValuenow: float,\n    @optional @as(\"aria-valuetext\")\n    ariaValuetext: string,\n    @optional @as(\"aria-atomic\")\n    ariaAtomic: bool,\n    @optional @as(\"aria-busy\")\n    ariaBusy: bool,\n    @optional @as(\"aria-relevant\")\n    ariaRelevant: string,\n    @optional @as(\"aria-grabbed\")\n    ariaGrabbed: bool,\n    @optional @as(\"aria-activedescendant\")\n    ariaActivedescendant: string,\n    @optional @as(\"aria-colcount\")\n    ariaColcount: int,\n    @optional @as(\"aria-colindex\")\n    ariaColindex: int,\n    @optional @as(\"aria-colspan\")\n    ariaColspan: int,\n    @optional @as(\"aria-controls\")\n    ariaControls: string,\n    @optional @as(\"aria-describedby\")\n    ariaDescribedby: string,\n    @optional @as(\"aria-errormessage\")\n    ariaErrormessage: string,\n    @optional @as(\"aria-flowto\")\n    ariaFlowto: string,\n    @optional @as(\"aria-labelledby\")\n    ariaLabelledby: string,\n    @optional @as(\"aria-owns\")\n    ariaOwns: string,\n    @optional @as(\"aria-posinset\")\n    ariaPosinset: int,\n    @optional @as(\"aria-rowcount\")\n    ariaRowcount: int,\n    @optional @as(\"aria-rowindex\")\n    ariaRowindex: int,\n    @optional @as(\"aria-rowspan\")\n    ariaRowspan: int,\n    @optional @as(\"aria-setsize\")\n    ariaSetsize: int,\n    @optional\n    defaultChecked: bool,\n    @optional\n    defaultValue: string,\n    @optional\n    accessKey: string,\n    @optional\n    className: string /* substitute for \"class\" */,\n    @optional\n    contentEditable: bool,\n    @optional\n    contextMenu: string,\n    @optional\n    dir: string /* \"ltr\", \"rtl\" or \"auto\" */,\n    @optional\n    draggable: bool,\n    @optional\n    hidden: bool,\n    @optional\n    id: string,\n    @optional\n    lang: string,\n    @optional\n    role: string /* ARIA role */,\n    @optional\n    style: style,\n    @optional\n    spellCheck: bool,\n    @optional\n    tabIndex: int,\n    @optional\n    title: string,\n    @optional\n    itemID: string,\n    @optional\n    itemProp: string,\n    @optional\n    itemRef: string,\n    @optional\n    itemScope: bool,\n    @optional\n    itemType: string /* uri */,\n    @optional\n    accept: string,\n    @optional\n    acceptCharset: string,\n    @optional\n    action: string /* uri */,\n    @optional\n    allowFullScreen: bool,\n    @optional\n    alt: string,\n    @optional\n    async: bool,\n    @optional\n    autoComplete: string /* has a fixed, but large-ish, set of possible values */,\n    @optional\n    autoCapitalize: string /* Mobile Safari specific */,\n    @optional\n    autoFocus: bool,\n    @optional\n    autoPlay: bool,\n    @optional\n    challenge: string,\n    @optional\n    charSet: string,\n    @optional\n    checked: bool,\n    @optional\n    cite: string /* uri */,\n    @optional\n    crossOrigin: string /* anonymous, use-credentials */,\n    @optional\n    cols: int,\n    @optional\n    colSpan: int,\n    @optional\n    content: string,\n    @optional\n    controls: bool,\n    @optional\n    coords: string /* set of values specifying the coordinates of a region */,\n    @optional\n    data: string /* uri */,\n    @optional\n    dateTime: string /* \"valid date string with optional time\" */,\n    @optional\n    default: bool,\n    @optional\n    defer: bool,\n    @optional\n    disabled: bool,\n    @optional\n    download: string /* should really be either a boolean, signifying presence, or a string */,\n    @optional\n    encType: string /* \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\" */,\n    @optional\n    form: string,\n    @optional\n    formAction: string /* uri */,\n    @optional\n    formTarget: string /* \"_blank\", \"_self\", etc. */,\n    @optional\n    formMethod: string /* \"post\", \"get\", \"put\" */,\n    @optional\n    headers: string,\n    @optional\n    height: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    high: int,\n    @optional\n    href: string /* uri */,\n    @optional\n    hrefLang: string,\n    @optional\n    htmlFor: string /* substitute for \"for\" */,\n    @optional\n    httpEquiv: string /* has a fixed set of possible values */,\n    @optional\n    icon: string /* uri? */,\n    @optional\n    inputMode: string /* \"verbatim\", \"latin\", \"numeric\", etc. */,\n    @optional\n    integrity: string,\n    @optional\n    keyType: string,\n    @optional\n    kind: string /* has a fixed set of possible values */,\n    @optional\n    label: string,\n    @optional\n    list: string,\n    @optional\n    loading: [#\"lazy\" | #eager],\n    @optional\n    loop: bool,\n    @optional\n    low: int,\n    @optional\n    manifest: string /* uri */,\n    @optional\n    max: string /* should be int or Js.Date.t */,\n    @optional\n    maxLength: int,\n    @optional\n    media: string /* a valid media query */,\n    @optional\n    mediaGroup: string,\n    @optional\n    method: string /* \"post\" or \"get\" */,\n    @optional\n    min: string,\n    @optional\n    minLength: int,\n    @optional\n    multiple: bool,\n    @optional\n    muted: bool,\n    @optional\n    name: string,\n    @optional\n    nonce: string,\n    @optional\n    noValidate: bool,\n    @optional @as(\"open\")\n    open_: bool /* use this one. Previous one is deprecated */,\n    @optional\n    optimum: int,\n    @optional\n    pattern: string /* valid Js RegExp */,\n    @optional\n    placeholder: string,\n    @optional\n    playsInline: bool,\n    @optional\n    poster: string /* uri */,\n    @optional\n    preload: string /* \"none\", \"metadata\" or \"auto\" (and \"\" as a synonym for \"auto\") */,\n    @optional\n    radioGroup: string,\n    @optional\n    readOnly: bool,\n    @optional\n    rel: string /* a space- or comma-separated (depending on the element) list of a fixed set of \"link types\" */,\n    @optional\n    required: bool,\n    @optional\n    reversed: bool,\n    @optional\n    rows: int,\n    @optional\n    rowSpan: int,\n    @optional\n    sandbox: string /* has a fixed set of possible values */,\n    @optional\n    scope: string /* has a fixed set of possible values */,\n    @optional\n    scoped: bool,\n    @optional\n    scrolling: string /* html4 only, \"auto\", \"yes\" or \"no\" */,\n    @optional\n    selected: bool,\n    @optional\n    shape: string,\n    @optional\n    size: int,\n    @optional\n    sizes: string,\n    @optional\n    span: int,\n    @optional\n    src: string /* uri */,\n    @optional\n    srcDoc: string,\n    @optional\n    srcLang: string,\n    @optional\n    srcSet: string,\n    @optional\n    start: int,\n    @optional\n    step: float,\n    @optional\n    summary: string /* deprecated */,\n    @optional\n    target: string,\n    @optional @as(\"type\")\n    type_: string /* has a fixed but large-ish set of possible values */ /* use this one. Previous one is deprecated */,\n    @optional\n    useMap: string,\n    @optional\n    value: string,\n    @optional\n    width: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    wrap: string /* \"hard\" or \"soft\" */,\n    @optional\n    onCopy: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCut: ReactEvent.Clipboard.t => unit,\n    @optional\n    onPaste: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCompositionEnd: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionStart: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionUpdate: ReactEvent.Composition.t => unit,\n    @optional\n    onKeyDown: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyPress: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyUp: ReactEvent.Keyboard.t => unit,\n    @optional\n    onFocus: ReactEvent.Focus.t => unit,\n    @optional\n    onBlur: ReactEvent.Focus.t => unit,\n    @optional\n    onChange: ReactEvent.Form.t => unit,\n    @optional\n    onInput: ReactEvent.Form.t => unit,\n    @optional\n    onSubmit: ReactEvent.Form.t => unit,\n    @optional\n    onInvalid: ReactEvent.Form.t => unit,\n    @optional\n    onClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onContextMenu: ReactEvent.Mouse.t => unit,\n    @optional\n    onDoubleClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrag: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnd: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragExit: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragStart: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrop: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseDown: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseMove: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOut: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseUp: ReactEvent.Mouse.t => unit,\n    @optional\n    onSelect: ReactEvent.Selection.t => unit,\n    @optional\n    onTouchCancel: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchEnd: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchMove: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchStart: ReactEvent.Touch.t => unit,\n    @optional\n    onPointerOver: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerEnter: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerDown: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerMove: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerUp: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerCancel: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerOut: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerLeave: ReactEvent.Pointer.t => unit,\n    @optional\n    onGotPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onLostPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onScroll: ReactEvent.UI.t => unit,\n    @optional\n    onWheel: ReactEvent.Wheel.t => unit,\n    @optional\n    onAbort: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlay: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlayThrough: ReactEvent.Media.t => unit,\n    @optional\n    onDurationChange: ReactEvent.Media.t => unit,\n    @optional\n    onEmptied: ReactEvent.Media.t => unit,\n    @optional\n    onEncrypted: ReactEvent.Media.t => unit,\n    @optional\n    onEnded: ReactEvent.Media.t => unit,\n    @optional\n    onError: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedData: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedMetadata: ReactEvent.Media.t => unit,\n    @optional\n    onLoadStart: ReactEvent.Media.t => unit,\n    @optional\n    onPause: ReactEvent.Media.t => unit,\n    @optional\n    onPlay: ReactEvent.Media.t => unit,\n    @optional\n    onPlaying: ReactEvent.Media.t => unit,\n    @optional\n    onProgress: ReactEvent.Media.t => unit,\n    @optional\n    onRateChange: ReactEvent.Media.t => unit,\n    @optional\n    onSeeked: ReactEvent.Media.t => unit,\n    @optional\n    onSeeking: ReactEvent.Media.t => unit,\n    @optional\n    onStalled: ReactEvent.Media.t => unit,\n    @optional\n    onSuspend: ReactEvent.Media.t => unit,\n    @optional\n    onTimeUpdate: ReactEvent.Media.t => unit,\n    @optional\n    onVolumeChange: ReactEvent.Media.t => unit,\n    @optional\n    onWaiting: ReactEvent.Media.t => unit,\n    @optional\n    onLoad: ReactEvent.Image.t => unit /* duplicate */ /* ~onError: ReactEvent.Image.t => unit=?, */,\n    @optional\n    onAnimationStart: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationEnd: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationIteration: ReactEvent.Animation.t => unit,\n    @optional\n    onTransitionEnd: ReactEvent.Transition.t => unit,\n    @optional\n    accentHeight: string,\n    @optional\n    accumulate: string,\n    @optional\n    additive: string,\n    @optional\n    alignmentBaseline: string,\n    @optional\n    allowReorder: string,\n    @optional\n    alphabetic: string,\n    @optional\n    amplitude: string,\n    @optional\n    arabicForm: string,\n    @optional\n    ascent: string,\n    @optional\n    attributeName: string,\n    @optional\n    attributeType: string,\n    @optional\n    autoReverse: string,\n    @optional\n    azimuth: string,\n    @optional\n    baseFrequency: string,\n    @optional\n    baseProfile: string,\n    @optional\n    baselineShift: string,\n    @optional\n    bbox: string,\n    @optional @as(\"begin\")\n    begin_: string /* use this one. Previous one is deprecated */,\n    @optional\n    bias: string,\n    @optional\n    by: string,\n    @optional\n    calcMode: string,\n    @optional\n    capHeight: string,\n    @optional\n    clip: string,\n    @optional\n    clipPath: string,\n    @optional\n    clipPathUnits: string,\n    @optional\n    clipRule: string,\n    @optional\n    colorInterpolation: string,\n    @optional\n    colorInterpolationFilters: string,\n    @optional\n    colorProfile: string,\n    @optional\n    colorRendering: string,\n    @optional\n    contentScriptType: string,\n    @optional\n    contentStyleType: string,\n    @optional\n    cursor: string,\n    @optional\n    cx: string,\n    @optional\n    cy: string,\n    @optional\n    d: string,\n    @optional\n    decelerate: string,\n    @optional\n    descent: string,\n    @optional\n    diffuseConstant: string,\n    @optional\n    direction: string,\n    @optional\n    display: string,\n    @optional\n    divisor: string,\n    @optional\n    dominantBaseline: string,\n    @optional\n    dur: string,\n    @optional\n    dx: string,\n    @optional\n    dy: string,\n    @optional\n    edgeMode: string,\n    @optional\n    elevation: string,\n    @optional\n    enableBackground: string,\n    @optional @as(\"end\")\n    end_: string /* use this one. Previous one is deprecated */,\n    @optional\n    exponent: string,\n    @optional\n    externalResourcesRequired: string,\n    @optional\n    fill: string,\n    @optional\n    fillOpacity: string,\n    @optional\n    fillRule: string,\n    @optional\n    filter: string,\n    @optional\n    filterRes: string,\n    @optional\n    filterUnits: string,\n    @optional\n    floodColor: string,\n    @optional\n    floodOpacity: string,\n    @optional\n    focusable: string,\n    @optional\n    fontFamily: string,\n    @optional\n    fontSize: string,\n    @optional\n    fontSizeAdjust: string,\n    @optional\n    fontStretch: string,\n    @optional\n    fontStyle: string,\n    @optional\n    fontVariant: string,\n    @optional\n    fontWeight: string,\n    @optional\n    fomat: string,\n    @optional\n    from: string,\n    @optional\n    fx: string,\n    @optional\n    fy: string,\n    @optional\n    g1: string,\n    @optional\n    g2: string,\n    @optional\n    glyphName: string,\n    @optional\n    glyphOrientationHorizontal: string,\n    @optional\n    glyphOrientationVertical: string,\n    @optional\n    glyphRef: string,\n    @optional\n    gradientTransform: string,\n    @optional\n    gradientUnits: string,\n    @optional\n    hanging: string,\n    @optional\n    horizAdvX: string,\n    @optional\n    horizOriginX: string,\n    @optional\n    ideographic: string,\n    @optional\n    imageRendering: string,\n    @optional @as(\"in\")\n    in_: string /* use this one. Previous one is deprecated */,\n    @optional\n    in2: string,\n    @optional\n    intercept: string,\n    @optional\n    k: string,\n    @optional\n    k1: string,\n    @optional\n    k2: string,\n    @optional\n    k3: string,\n    @optional\n    k4: string,\n    @optional\n    kernelMatrix: string,\n    @optional\n    kernelUnitLength: string,\n    @optional\n    kerning: string,\n    @optional\n    keyPoints: string,\n    @optional\n    keySplines: string,\n    @optional\n    keyTimes: string,\n    @optional\n    lengthAdjust: string,\n    @optional\n    letterSpacing: string,\n    @optional\n    lightingColor: string,\n    @optional\n    limitingConeAngle: string,\n    @optional\n    local: string,\n    @optional\n    markerEnd: string,\n    @optional\n    markerHeight: string,\n    @optional\n    markerMid: string,\n    @optional\n    markerStart: string,\n    @optional\n    markerUnits: string,\n    @optional\n    markerWidth: string,\n    @optional\n    mask: string,\n    @optional\n    maskContentUnits: string,\n    @optional\n    maskUnits: string,\n    @optional\n    mathematical: string,\n    @optional\n    mode: string,\n    @optional\n    numOctaves: string,\n    @optional\n    offset: string,\n    @optional\n    opacity: string,\n    @optional\n    operator: string,\n    @optional\n    order: string,\n    @optional\n    orient: string,\n    @optional\n    orientation: string,\n    @optional\n    origin: string,\n    @optional\n    overflow: string,\n    @optional\n    overflowX: string,\n    @optional\n    overflowY: string,\n    @optional\n    overlinePosition: string,\n    @optional\n    overlineThickness: string,\n    @optional\n    paintOrder: string,\n    @optional\n    panose1: string,\n    @optional\n    pathLength: string,\n    @optional\n    patternContentUnits: string,\n    @optional\n    patternTransform: string,\n    @optional\n    patternUnits: string,\n    @optional\n    pointerEvents: string,\n    @optional\n    points: string,\n    @optional\n    pointsAtX: string,\n    @optional\n    pointsAtY: string,\n    @optional\n    pointsAtZ: string,\n    @optional\n    preserveAlpha: string,\n    @optional\n    preserveAspectRatio: string,\n    @optional\n    primitiveUnits: string,\n    @optional\n    r: string,\n    @optional\n    radius: string,\n    @optional\n    refX: string,\n    @optional\n    refY: string,\n    @optional\n    renderingIntent: string,\n    @optional\n    repeatCount: string,\n    @optional\n    repeatDur: string,\n    @optional\n    requiredExtensions: string,\n    @optional\n    requiredFeatures: string,\n    @optional\n    restart: string,\n    @optional\n    result: string,\n    @optional\n    rotate: string,\n    @optional\n    rx: string,\n    @optional\n    ry: string,\n    @optional\n    scale: string,\n    @optional\n    seed: string,\n    @optional\n    shapeRendering: string,\n    @optional\n    slope: string,\n    @optional\n    spacing: string,\n    @optional\n    specularConstant: string,\n    @optional\n    specularExponent: string,\n    @optional\n    speed: string,\n    @optional\n    spreadMethod: string,\n    @optional\n    startOffset: string,\n    @optional\n    stdDeviation: string,\n    @optional\n    stemh: string,\n    @optional\n    stemv: string,\n    @optional\n    stitchTiles: string,\n    @optional\n    stopColor: string,\n    @optional\n    stopOpacity: string,\n    @optional\n    strikethroughPosition: string,\n    @optional\n    strikethroughThickness: string,\n    @optional\n    string: string,\n    @optional\n    stroke: string,\n    @optional\n    strokeDasharray: string,\n    @optional\n    strokeDashoffset: string,\n    @optional\n    strokeLinecap: string,\n    @optional\n    strokeLinejoin: string,\n    @optional\n    strokeMiterlimit: string,\n    @optional\n    strokeOpacity: string,\n    @optional\n    strokeWidth: string,\n    @optional\n    surfaceScale: string,\n    @optional\n    systemLanguage: string,\n    @optional\n    tableValues: string,\n    @optional\n    targetX: string,\n    @optional\n    targetY: string,\n    @optional\n    textAnchor: string,\n    @optional\n    textDecoration: string,\n    @optional\n    textLength: string,\n    @optional\n    textRendering: string,\n    @optional @as(\"to\")\n    to_: string /* use this one. Previous one is deprecated */,\n    @optional\n    transform: string,\n    @optional\n    u1: string,\n    @optional\n    u2: string,\n    @optional\n    underlinePosition: string,\n    @optional\n    underlineThickness: string,\n    @optional\n    unicode: string,\n    @optional\n    unicodeBidi: string,\n    @optional\n    unicodeRange: string,\n    @optional\n    unitsPerEm: string,\n    @optional\n    vAlphabetic: string,\n    @optional\n    vHanging: string,\n    @optional\n    vIdeographic: string,\n    @optional\n    vMathematical: string,\n    @optional\n    values: string,\n    @optional\n    vectorEffect: string,\n    @optional\n    version: string,\n    @optional\n    vertAdvX: string,\n    @optional\n    vertAdvY: string,\n    @optional\n    vertOriginX: string,\n    @optional\n    vertOriginY: string,\n    @optional\n    viewBox: string,\n    @optional\n    viewTarget: string,\n    @optional\n    visibility: string,\n    @optional\n    widths: string,\n    @optional\n    wordSpacing: string,\n    @optional\n    writingMode: string,\n    @optional\n    x: string,\n    @optional\n    x1: string,\n    @optional\n    x2: string,\n    @optional\n    xChannelSelector: string,\n    @optional\n    xHeight: string,\n    @optional\n    xlinkActuate: string,\n    @optional\n    xlinkArcrole: string,\n    @optional\n    xlinkHref: string,\n    @optional\n    xlinkRole: string,\n    @optional\n    xlinkShow: string,\n    @optional\n    xlinkTitle: string,\n    @optional\n    xlinkType: string,\n    @optional\n    xmlns: string,\n    @optional\n    xmlnsXlink: string,\n    @optional\n    xmlBase: string,\n    @optional\n    xmlLang: string,\n    @optional\n    xmlSpace: string,\n    @optional\n    y: string,\n    @optional\n    y1: string,\n    @optional\n    y2: string,\n    @optional\n    yChannelSelector: string,\n    @optional\n    z: string,\n    @optional\n    zoomAndPan: string,\n    @optional\n    about: string,\n    @optional\n    datatype: string,\n    @optional\n    inlist: string,\n    @optional\n    prefix: string,\n    @optional\n    property: string,\n    @optional\n    resource: string,\n    @optional\n    typeof: string,\n    @optional\n    vocab: string,\n    @optional\n    dangerouslySetInnerHTML: {\"__html\": string},\n    @optional\n    suppressContentEditableWarning: bool,\n  }\n   * Watch out! There are two props types and the only difference is the type of ref.\n   * Please keep in sync.\n   */\n  @deriving(abstract)\n  type props = {\n    @optional\n    key: string,\n    @optional\n    ref: Js.nullable<Dom.element> => unit,\n    @optional @as(\"aria-details\")\n    ariaDetails: string,\n    @optional @as(\"aria-disabled\")\n    ariaDisabled: bool,\n    @optional @as(\"aria-hidden\")\n    ariaHidden: bool,\n    @optional @as(\"aria-keyshortcuts\")\n    ariaKeyshortcuts: string,\n    @optional @as(\"aria-label\")\n    ariaLabel: string,\n    @optional @as(\"aria-roledescription\")\n    ariaRoledescription: string,\n    @optional @as(\"aria-expanded\")\n    ariaExpanded: bool,\n    @optional @as(\"aria-level\")\n    ariaLevel: int,\n    @optional @as(\"aria-modal\")\n    ariaModal: bool,\n    @optional @as(\"aria-multiline\")\n    ariaMultiline: bool,\n    @optional @as(\"aria-multiselectable\")\n    ariaMultiselectable: bool,\n    @optional @as(\"aria-placeholder\")\n    ariaPlaceholder: string,\n    @optional @as(\"aria-readonly\")\n    ariaReadonly: bool,\n    @optional @as(\"aria-required\")\n    ariaRequired: bool,\n    @optional @as(\"aria-selected\")\n    ariaSelected: bool,\n    @optional @as(\"aria-sort\")\n    ariaSort: string,\n    @optional @as(\"aria-valuemax\")\n    ariaValuemax: float,\n    @optional @as(\"aria-valuemin\")\n    ariaValuemin: float,\n    @optional @as(\"aria-valuenow\")\n    ariaValuenow: float,\n    @optional @as(\"aria-valuetext\")\n    ariaValuetext: string,\n    @optional @as(\"aria-atomic\")\n    ariaAtomic: bool,\n    @optional @as(\"aria-busy\")\n    ariaBusy: bool,\n    @optional @as(\"aria-relevant\")\n    ariaRelevant: string,\n    @optional @as(\"aria-grabbed\")\n    ariaGrabbed: bool,\n    @optional @as(\"aria-activedescendant\")\n    ariaActivedescendant: string,\n    @optional @as(\"aria-colcount\")\n    ariaColcount: int,\n    @optional @as(\"aria-colindex\")\n    ariaColindex: int,\n    @optional @as(\"aria-colspan\")\n    ariaColspan: int,\n    @optional @as(\"aria-controls\")\n    ariaControls: string,\n    @optional @as(\"aria-describedby\")\n    ariaDescribedby: string,\n    @optional @as(\"aria-errormessage\")\n    ariaErrormessage: string,\n    @optional @as(\"aria-flowto\")\n    ariaFlowto: string,\n    @optional @as(\"aria-labelledby\")\n    ariaLabelledby: string,\n    @optional @as(\"aria-owns\")\n    ariaOwns: string,\n    @optional @as(\"aria-posinset\")\n    ariaPosinset: int,\n    @optional @as(\"aria-rowcount\")\n    ariaRowcount: int,\n    @optional @as(\"aria-rowindex\")\n    ariaRowindex: int,\n    @optional @as(\"aria-rowspan\")\n    ariaRowspan: int,\n    @optional @as(\"aria-setsize\")\n    ariaSetsize: int,\n    @optional\n    defaultChecked: bool,\n    @optional\n    defaultValue: string,\n    @optional\n    accessKey: string,\n    @optional\n    className: string /* substitute for \"class\" */,\n    @optional\n    contentEditable: bool,\n    @optional\n    contextMenu: string,\n    @optional\n    dir: string /* \"ltr\", \"rtl\" or \"auto\" */,\n    @optional\n    draggable: bool,\n    @optional\n    hidden: bool,\n    @optional\n    id: string,\n    @optional\n    lang: string,\n    @optional\n    role: string /* ARIA role */,\n    @optional\n    style: style,\n    @optional\n    spellCheck: bool,\n    @optional\n    tabIndex: int,\n    @optional\n    title: string,\n    @optional\n    itemID: string,\n    @optional\n    itemProp: string,\n    @optional\n    itemRef: string,\n    @optional\n    itemScope: bool,\n    @optional\n    itemType: string /* uri */,\n    @optional\n    accept: string,\n    @optional\n    acceptCharset: string,\n    @optional\n    action: string /* uri */,\n    @optional\n    allow: string,\n    @optional\n    allowFullScreen: bool,\n    @optional\n    alt: string,\n    @optional\n    async: bool,\n    @optional\n    autoComplete: string /* has a fixed, but large-ish, set of possible values */,\n    @optional\n    autoCapitalize: string /* Mobile Safari specific */,\n    @optional\n    autoFocus: bool,\n    @optional\n    autoPlay: bool,\n    @optional\n    challenge: string,\n    @optional\n    charSet: string,\n    @optional\n    checked: bool,\n    @optional\n    cite: string /* uri */,\n    @optional\n    crossorigin: bool,\n    @optional\n    cols: int,\n    @optional\n    colSpan: int,\n    @optional\n    content: string,\n    @optional\n    controls: bool,\n    @optional\n    coords: string /* set of values specifying the coordinates of a region */,\n    @optional\n    data: string /* uri */,\n    @optional\n    dateTime: string /* \"valid date string with optional time\" */,\n    @optional\n    default: bool,\n    @optional\n    defer: bool,\n    @optional\n    disabled: bool,\n    @optional\n    download: string /* should really be either a boolean, signifying presence, or a string */,\n    @optional\n    encType: string /* \"application/x-www-form-urlencoded\", \"multipart/form-data\" or \"text/plain\" */,\n    @optional\n    form: string,\n    @optional\n    formAction: string /* uri */,\n    @optional\n    formTarget: string /* \"_blank\", \"_self\", etc. */,\n    @optional\n    formMethod: string /* \"post\", \"get\", \"put\" */,\n    @optional\n    frameBorder: int /* deprecated, prefer to use css border instead */,\n    @optional\n    headers: string,\n    @optional\n    height: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    high: int,\n    @optional\n    href: string /* uri */,\n    @optional\n    hrefLang: string,\n    @optional\n    htmlFor: string /* substitute for \"for\" */,\n    @optional\n    httpEquiv: string /* has a fixed set of possible values */,\n    @optional\n    icon: string /* uri? */,\n    @optional\n    inputMode: string /* \"verbatim\", \"latin\", \"numeric\", etc. */,\n    @optional\n    integrity: string,\n    @optional\n    keyType: string,\n    @optional\n    kind: string /* has a fixed set of possible values */,\n    @optional\n    label: string,\n    @optional\n    list: string,\n    @optional\n    loop: bool,\n    @optional\n    low: int,\n    @optional\n    manifest: string /* uri */,\n    @optional\n    max: string /* should be int or Js.Date.t */,\n    @optional\n    maxLength: int,\n    @optional\n    media: string /* a valid media query */,\n    @optional\n    mediaGroup: string,\n    @optional\n    method: string /* \"post\" or \"get\" */,\n    @optional\n    min: string,\n    @optional\n    minLength: int,\n    @optional\n    multiple: bool,\n    @optional\n    muted: bool,\n    @optional\n    name: string,\n    @optional\n    nonce: string,\n    @optional\n    noValidate: bool,\n    @optional @as(\"open\")\n    open_: bool /* use this one. Previous one is deprecated */,\n    @optional\n    optimum: int,\n    @optional\n    pattern: string /* valid Js RegExp */,\n    @optional\n    placeholder: string,\n    @optional\n    poster: string /* uri */,\n    @optional\n    preload: string /* \"none\", \"metadata\" or \"auto\" (and \"\" as a synonym for \"auto\") */,\n    @optional\n    radioGroup: string,\n    @optional\n    readOnly: bool,\n    @optional\n    rel: string /* a space- or comma-separated (depending on the element) list of a fixed set of \"link types\" */,\n    @optional\n    required: bool,\n    @optional\n    reversed: bool,\n    @optional\n    rows: int,\n    @optional\n    rowSpan: int,\n    @optional\n    sandbox: string /* has a fixed set of possible values */,\n    @optional\n    scope: string /* has a fixed set of possible values */,\n    @optional\n    scoped: bool,\n    @optional\n    scrolling: string /* html4 only, \"auto\", \"yes\" or \"no\" */,\n    @optional\n    selected: bool,\n    @optional\n    shape: string,\n    @optional\n    size: int,\n    @optional\n    sizes: string,\n    @optional\n    span: int,\n    @optional\n    src: string /* uri */,\n    @optional\n    srcDoc: string,\n    @optional\n    srcLang: string,\n    @optional\n    srcSet: string,\n    @optional\n    start: int,\n    @optional\n    step: float,\n    @optional\n    summary: string /* deprecated */,\n    @optional\n    target: string,\n    @optional @as(\"type\")\n    type_: string /* has a fixed but large-ish set of possible values */ /* use this one. Previous one is deprecated */,\n    @optional\n    useMap: string,\n    @optional\n    value: string,\n    @optional\n    width: string /* in html5 this can only be a number, but in html4 it can ba a percentage as well */,\n    @optional\n    wrap: string /* \"hard\" or \"soft\" */,\n    @optional\n    onCopy: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCut: ReactEvent.Clipboard.t => unit,\n    @optional\n    onPaste: ReactEvent.Clipboard.t => unit,\n    @optional\n    onCompositionEnd: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionStart: ReactEvent.Composition.t => unit,\n    @optional\n    onCompositionUpdate: ReactEvent.Composition.t => unit,\n    @optional\n    onKeyDown: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyPress: ReactEvent.Keyboard.t => unit,\n    @optional\n    onKeyUp: ReactEvent.Keyboard.t => unit,\n    @optional\n    onFocus: ReactEvent.Focus.t => unit,\n    @optional\n    onBlur: ReactEvent.Focus.t => unit,\n    @optional\n    onChange: ReactEvent.Form.t => unit,\n    @optional\n    onInput: ReactEvent.Form.t => unit,\n    @optional\n    onSubmit: ReactEvent.Form.t => unit,\n    @optional\n    onInvalid: ReactEvent.Form.t => unit,\n    @optional\n    onClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onContextMenu: ReactEvent.Mouse.t => unit,\n    @optional\n    onDoubleClick: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrag: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnd: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragExit: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onDragStart: ReactEvent.Mouse.t => unit,\n    @optional\n    onDrop: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseDown: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseEnter: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseLeave: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseMove: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOut: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseOver: ReactEvent.Mouse.t => unit,\n    @optional\n    onMouseUp: ReactEvent.Mouse.t => unit,\n    @optional\n    onSelect: ReactEvent.Selection.t => unit,\n    @optional\n    onTouchCancel: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchEnd: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchMove: ReactEvent.Touch.t => unit,\n    @optional\n    onTouchStart: ReactEvent.Touch.t => unit,\n    @optional\n    onPointerOver: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerEnter: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerDown: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerMove: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerUp: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerCancel: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerOut: ReactEvent.Pointer.t => unit,\n    @optional\n    onPointerLeave: ReactEvent.Pointer.t => unit,\n    @optional\n    onGotPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onLostPointerCapture: ReactEvent.Pointer.t => unit,\n    @optional\n    onScroll: ReactEvent.UI.t => unit,\n    @optional\n    onWheel: ReactEvent.Wheel.t => unit,\n    @optional\n    onAbort: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlay: ReactEvent.Media.t => unit,\n    @optional\n    onCanPlayThrough: ReactEvent.Media.t => unit,\n    @optional\n    onDurationChange: ReactEvent.Media.t => unit,\n    @optional\n    onEmptied: ReactEvent.Media.t => unit,\n    @optional\n    onEncrypetd: ReactEvent.Media.t => unit,\n    @optional\n    onEnded: ReactEvent.Media.t => unit,\n    @optional\n    onError: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedData: ReactEvent.Media.t => unit,\n    @optional\n    onLoadedMetadata: ReactEvent.Media.t => unit,\n    @optional\n    onLoadStart: ReactEvent.Media.t => unit,\n    @optional\n    onPause: ReactEvent.Media.t => unit,\n    @optional\n    onPlay: ReactEvent.Media.t => unit,\n    @optional\n    onPlaying: ReactEvent.Media.t => unit,\n    @optional\n    onProgress: ReactEvent.Media.t => unit,\n    @optional\n    onRateChange: ReactEvent.Media.t => unit,\n    @optional\n    onSeeked: ReactEvent.Media.t => unit,\n    @optional\n    onSeeking: ReactEvent.Media.t => unit,\n    @optional\n    onStalled: ReactEvent.Media.t => unit,\n    @optional\n    onSuspend: ReactEvent.Media.t => unit,\n    @optional\n    onTimeUpdate: ReactEvent.Media.t => unit,\n    @optional\n    onVolumeChange: ReactEvent.Media.t => unit,\n    @optional\n    onWaiting: ReactEvent.Media.t => unit,\n    @optional\n    onLoad: ReactEvent.Image.t => unit /* duplicate */ /* ~onError: ReactEvent.Image.t => unit=?, */,\n    @optional\n    onAnimationStart: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationEnd: ReactEvent.Animation.t => unit,\n    @optional\n    onAnimationIteration: ReactEvent.Animation.t => unit,\n    @optional\n    onTransitionEnd: ReactEvent.Transition.t => unit,\n    @optional\n    accentHeight: string,\n    @optional\n    accumulate: string,\n    @optional\n    additive: string,\n    @optional\n    alignmentBaseline: string,\n    @optional\n    allowReorder: string,\n    @optional\n    alphabetic: string,\n    @optional\n    amplitude: string,\n    @optional\n    arabicForm: string,\n    @optional\n    ascent: string,\n    @optional\n    attributeName: string,\n    @optional\n    attributeType: string,\n    @optional\n    autoReverse: string,\n    @optional\n    azimuth: string,\n    @optional\n    baseFrequency: string,\n    @optional\n    baseProfile: string,\n    @optional\n    baselineShift: string,\n    @optional\n    bbox: string,\n    @optional @as(\"begin\")\n    begin_: string /* use this one. Previous one is deprecated */,\n    @optional\n    bias: string,\n    @optional\n    by: string,\n    @optional\n    calcMode: string,\n    @optional\n    capHeight: string,\n    @optional\n    clip: string,\n    @optional\n    clipPath: string,\n    @optional\n    clipPathUnits: string,\n    @optional\n    clipRule: string,\n    @optional\n    colorInterpolation: string,\n    @optional\n    colorInterpolationFilters: string,\n    @optional\n    colorProfile: string,\n    @optional\n    colorRendering: string,\n    @optional\n    contentScriptType: string,\n    @optional\n    contentStyleType: string,\n    @optional\n    cursor: string,\n    @optional\n    cx: string,\n    @optional\n    cy: string,\n    @optional\n    d: string,\n    @optional\n    decelerate: string,\n    @optional\n    descent: string,\n    @optional\n    diffuseConstant: string,\n    @optional\n    direction: string,\n    @optional\n    display: string,\n    @optional\n    divisor: string,\n    @optional\n    dominantBaseline: string,\n    @optional\n    dur: string,\n    @optional\n    dx: string,\n    @optional\n    dy: string,\n    @optional\n    edgeMode: string,\n    @optional\n    elevation: string,\n    @optional\n    enableBackground: string,\n    @optional @as(\"end\")\n    end_: string /* use this one. Previous one is deprecated */,\n    @optional\n    exponent: string,\n    @optional\n    externalResourcesRequired: string,\n    @optional\n    fill: string,\n    @optional\n    fillOpacity: string,\n    @optional\n    fillRule: string,\n    @optional\n    filter: string,\n    @optional\n    filterRes: string,\n    @optional\n    filterUnits: string,\n    @optional\n    floodColor: string,\n    @optional\n    floodOpacity: string,\n    @optional\n    focusable: string,\n    @optional\n    fontFamily: string,\n    @optional\n    fontSize: string,\n    @optional\n    fontSizeAdjust: string,\n    @optional\n    fontStretch: string,\n    @optional\n    fontStyle: string,\n    @optional\n    fontVariant: string,\n    @optional\n    fontWeight: string,\n    @optional\n    fomat: string,\n    @optional\n    from: string,\n    @optional\n    fx: string,\n    @optional\n    fy: string,\n    @optional\n    g1: string,\n    @optional\n    g2: string,\n    @optional\n    glyphName: string,\n    @optional\n    glyphOrientationHorizontal: string,\n    @optional\n    glyphOrientationVertical: string,\n    @optional\n    glyphRef: string,\n    @optional\n    gradientTransform: string,\n    @optional\n    gradientUnits: string,\n    @optional\n    hanging: string,\n    @optional\n    horizAdvX: string,\n    @optional\n    horizOriginX: string,\n    @optional\n    ideographic: string,\n    @optional\n    imageRendering: string,\n    @optional @as(\"in\")\n    in_: string /* use this one. Previous one is deprecated */,\n    @optional\n    in2: string,\n    @optional\n    intercept: string,\n    @optional\n    k: string,\n    @optional\n    k1: string,\n    @optional\n    k2: string,\n    @optional\n    k3: string,\n    @optional\n    k4: string,\n    @optional\n    kernelMatrix: string,\n    @optional\n    kernelUnitLength: string,\n    @optional\n    kerning: string,\n    @optional\n    keyPoints: string,\n    @optional\n    keySplines: string,\n    @optional\n    keyTimes: string,\n    @optional\n    lengthAdjust: string,\n    @optional\n    letterSpacing: string,\n    @optional\n    lightingColor: string,\n    @optional\n    limitingConeAngle: string,\n    @optional\n    local: string,\n    @optional\n    markerEnd: string,\n    @optional\n    markerHeight: string,\n    @optional\n    markerMid: string,\n    @optional\n    markerStart: string,\n    @optional\n    markerUnits: string,\n    @optional\n    markerWidth: string,\n    @optional\n    mask: string,\n    @optional\n    maskContentUnits: string,\n    @optional\n    maskUnits: string,\n    @optional\n    mathematical: string,\n    @optional\n    mode: string,\n    @optional\n    numOctaves: string,\n    @optional\n    offset: string,\n    @optional\n    opacity: string,\n    @optional\n    operator: string,\n    @optional\n    order: string,\n    @optional\n    orient: string,\n    @optional\n    orientation: string,\n    @optional\n    origin: string,\n    @optional\n    overflow: string,\n    @optional\n    overflowX: string,\n    @optional\n    overflowY: string,\n    @optional\n    overlinePosition: string,\n    @optional\n    overlineThickness: string,\n    @optional\n    paintOrder: string,\n    @optional\n    panose1: string,\n    @optional\n    pathLength: string,\n    @optional\n    patternContentUnits: string,\n    @optional\n    patternTransform: string,\n    @optional\n    patternUnits: string,\n    @optional\n    pointerEvents: string,\n    @optional\n    points: string,\n    @optional\n    pointsAtX: string,\n    @optional\n    pointsAtY: string,\n    @optional\n    pointsAtZ: string,\n    @optional\n    preserveAlpha: string,\n    @optional\n    preserveAspectRatio: string,\n    @optional\n    primitiveUnits: string,\n    @optional\n    r: string,\n    @optional\n    radius: string,\n    @optional\n    refX: string,\n    @optional\n    refY: string,\n    @optional\n    renderingIntent: string,\n    @optional\n    repeatCount: string,\n    @optional\n    repeatDur: string,\n    @optional\n    requiredExtensions: string,\n    @optional\n    requiredFeatures: string,\n    @optional\n    restart: string,\n    @optional\n    result: string,\n    @optional\n    rotate: string,\n    @optional\n    rx: string,\n    @optional\n    ry: string,\n    @optional\n    scale: string,\n    @optional\n    seed: string,\n    @optional\n    shapeRendering: string,\n    @optional\n    slope: string,\n    @optional\n    spacing: string,\n    @optional\n    specularConstant: string,\n    @optional\n    specularExponent: string,\n    @optional\n    speed: string,\n    @optional\n    spreadMethod: string,\n    @optional\n    startOffset: string,\n    @optional\n    stdDeviation: string,\n    @optional\n    stemh: string,\n    @optional\n    stemv: string,\n    @optional\n    stitchTiles: string,\n    @optional\n    stopColor: string,\n    @optional\n    stopOpacity: string,\n    @optional\n    strikethroughPosition: string,\n    @optional\n    strikethroughThickness: string,\n    @optional\n    string: string,\n    @optional\n    stroke: string,\n    @optional\n    strokeDasharray: string,\n    @optional\n    strokeDashoffset: string,\n    @optional\n    strokeLinecap: string,\n    @optional\n    strokeLinejoin: string,\n    @optional\n    strokeMiterlimit: string,\n    @optional\n    strokeOpacity: string,\n    @optional\n    strokeWidth: string,\n    @optional\n    surfaceScale: string,\n    @optional\n    systemLanguage: string,\n    @optional\n    tableValues: string,\n    @optional\n    targetX: string,\n    @optional\n    targetY: string,\n    @optional\n    textAnchor: string,\n    @optional\n    textDecoration: string,\n    @optional\n    textLength: string,\n    @optional\n    textRendering: string,\n    @optional @as(\"to\")\n    to_: string /* use this one. Previous one is deprecated */,\n    @optional\n    transform: string,\n    @optional\n    u1: string,\n    @optional\n    u2: string,\n    @optional\n    underlinePosition: string,\n    @optional\n    underlineThickness: string,\n    @optional\n    unicode: string,\n    @optional\n    unicodeBidi: string,\n    @optional\n    unicodeRange: string,\n    @optional\n    unitsPerEm: string,\n    @optional\n    vAlphabetic: string,\n    @optional\n    vHanging: string,\n    @optional\n    vIdeographic: string,\n    @optional\n    vMathematical: string,\n    @optional\n    values: string,\n    @optional\n    vectorEffect: string,\n    @optional\n    version: string,\n    @optional\n    vertAdvX: string,\n    @optional\n    vertAdvY: string,\n    @optional\n    vertOriginX: string,\n    @optional\n    vertOriginY: string,\n    @optional\n    viewBox: string,\n    @optional\n    viewTarget: string,\n    @optional\n    visibility: string,\n    @optional\n    widths: string,\n    @optional\n    wordSpacing: string,\n    @optional\n    writingMode: string,\n    @optional\n    x: string,\n    @optional\n    x1: string,\n    @optional\n    x2: string,\n    @optional\n    xChannelSelector: string,\n    @optional\n    xHeight: string,\n    @optional\n    xlinkActuate: string,\n    @optional\n    xlinkArcrole: string,\n    @optional\n    xlinkHref: string,\n    @optional\n    xlinkRole: string,\n    @optional\n    xlinkShow: string,\n    @optional\n    xlinkTitle: string,\n    @optional\n    xlinkType: string,\n    @optional\n    xmlns: string,\n    @optional\n    xmlnsXlink: string,\n    @optional\n    xmlBase: string,\n    @optional\n    xmlLang: string,\n    @optional\n    xmlSpace: string,\n    @optional\n    y: string,\n    @optional\n    y1: string,\n    @optional\n    y2: string,\n    @optional\n    yChannelSelector: string,\n    @optional\n    z: string,\n    @optional\n    zoomAndPan: string,\n    @optional\n    about: string,\n    @optional\n    datatype: string,\n    @optional\n    inlist: string,\n    @optional\n    prefix: string,\n    @optional\n    property: string,\n    @optional\n    resource: string,\n    @optional\n    typeof: string,\n    @optional\n    vocab: string,\n    @optional\n    dangerouslySetInnerHTML: {\"__html\": string},\n    @optional\n    suppressContentEditableWarning: bool,\n  }\n}"
      ]
    ],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "querySelector",
        "external querySelector: string => option<Dom.element> = \"document.querySelector\""
      ],
      [
        "render",
        "external render: (React.element, Dom.element) => unit = \"render\""
      ],
      [
        "hydrate",
        "external hydrate: (React.element, Dom.element) => unit = \"hydrate\""
      ],
      [
        "createPortal",
        "external createPortal: (React.element, Dom.element) => React.element = \"createPortal\""
      ],
      [
        "unmountComponentAtNode",
        "external unmountComponentAtNode: Dom.element => unit = \"unmountComponentAtNode\""
      ],
      [
        "domElementToObj",
        "external domElementToObj: Dom.element => {..} = \"%identity\""
      ],
      [
        "stringToComponent",
        "external stringToComponent: string => React.component<domProps> = \"%identity\""
      ]
    ]
  },
  {
    "moduleName": "ReactEventV3",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [
      [
        "synthetic",
        "type synthetic<'a> = ReactEvent.synthetic<'a>"
      ],
      [
        "t",
        "    type t\n  },\n) => {\n  @get external bubbles: Type.t => bool = \"bubbles\"\n  @get external cancelable: Type.t => bool = \"cancelable\"\n  @get\n  external currentTarget: Type.t => {..} = \"currentTarget\" /* Should return Dom.eventTarget */\n  @get external defaultPrevented: Type.t => bool = \"defaultPrevented\"\n  @get external eventPhase: Type.t => int = \"eventPhase\"\n  @get external isTrusted: Type.t => bool = \"isTrusted\"\n  @get external nativeEvent: Type.t => {..} = \"nativeEvent\" /* Should return Dom.event */\n  @send external preventDefault: Type.t => unit = \"preventDefault\"\n  @send\n  external isDefaultPrevented: Type.t => bool = \"isDefaultPrevented\"\n  @send external stopPropagation: Type.t => unit = \"stopPropagation\"\n  @send\n  external isPropagationStopped: Type.t => bool = \"isPropagationStopped\"\n  @get external target: Type.t => {..} = \"target\" /* Should return Dom.eventTarget */\n  @get external timeStamp: Type.t => float = \"timeStamp\"\n  @get external type_: Type.t => string = \"type\"\n  @send external persist: Type.t => unit = \"persist\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Synthetic.tag\n  type t = synthetic<tag>\n  @get external bubbles: synthetic<'a> => bool = \"bubbles\"\n  @get external cancelable: synthetic<'a> => bool = \"cancelable\"\n  @get\n  external currentTarget: synthetic<'a> => {..} =\n    \"currentTarget\" /* Should return Dom.eventTarget */\n  @get\n  external defaultPrevented: synthetic<'a> => bool = \"defaultPrevented\"\n  @get external eventPhase: synthetic<'a> => int = \"eventPhase\"\n  @get external isTrusted: synthetic<'a> => bool = \"isTrusted\"\n  @get\n  external nativeEvent: synthetic<'a> => {..} = \"nativeEvent\" /* Should return Dom.event */\n  @send\n  external preventDefault: synthetic<'a> => unit = \"preventDefault\"\n  @send\n  external isDefaultPrevented: synthetic<'a> => bool = \"isDefaultPrevented\"\n  @send\n  external stopPropagation: synthetic<'a> => unit = \"stopPropagation\"\n  @send\n  external isPropagationStopped: synthetic<'a> => bool = \"isPropagationStopped\"\n  @get external target: synthetic<'a> => {..} = \"target\" /* Should return Dom.eventTarget */\n  @get external timeStamp: synthetic<'a> => float = \"timeStamp\"\n  @get external type_: synthetic<'a> => string = \"type\"\n  @send external persist: synthetic<'a> => unit = \"persist\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Clipboard.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external clipboardData: t => {..} = \"clipboardData\" /* Should return Dom.dataTransfer */\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Composition.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external data: t => string = \"data\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Keyboard.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external altKey: t => bool = \"altKey\"\n  @get external charCode: t => int = \"charCode\"\n  @get external ctrlKey: t => bool = \"ctrlKey\"\n  @send\n  external getModifierState: (t, string) => bool = \"getModifierState\"\n  @get external key: t => string = \"key\"\n  @get external keyCode: t => int = \"keyCode\"\n  @get external locale: t => string = \"locale\"\n  @get external location: t => int = \"location\"\n  @get external metaKey: t => bool = \"metaKey\"\n  @get external repeat: t => bool = \"repeat\"\n  @get external shiftKey: t => bool = \"shiftKey\"\n  @get external which: t => int = \"which\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Focus.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get @return(nullable)\n  external relatedTarget: t => option<{..}> = \"relatedTarget\" /* Should return Dom.eventTarget */\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Form.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Mouse.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external altKey: t => bool = \"altKey\"\n  @get external button: t => int = \"button\"\n  @get external buttons: t => int = \"buttons\"\n  @get external clientX: t => int = \"clientX\"\n  @get external clientY: t => int = \"clientY\"\n  @get external ctrlKey: t => bool = \"ctrlKey\"\n  @send\n  external getModifierState: (t, string) => bool = \"getModifierState\"\n  @get external metaKey: t => bool = \"metaKey\"\n  @get external movementX: t => int = \"movementX\"\n  @get external movementY: t => int = \"movementY\"\n  @get external pageX: t => int = \"pageX\"\n  @get external pageY: t => int = \"pageY\"\n  @get @return(nullable)\n  external relatedTarget: t => option<{..}> = \"relatedTarget\" /* Should return Dom.eventTarget */\n  @get external screenX: t => int = \"screenX\"\n  @get external screenY: t => int = \"screenY\"\n  @get external shiftKey: t => bool = \"shiftKey\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Pointer.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external detail: t => int = \"detail\"\n  @get external view: t => Dom.window = \"view\" /* Should return DOMAbstractView/WindowProxy */\n  @get external screenX: t => int = \"screenX\"\n  @get external screenY: t => int = \"screenY\"\n  @get external clientX: t => int = \"clientX\"\n  @get external clientY: t => int = \"clientY\"\n  @get external pageX: t => int = \"pageX\"\n  @get external pageY: t => int = \"pageY\"\n  @get external movementX: t => int = \"movementX\"\n  @get external movementY: t => int = \"movementY\"\n  @get external ctrlKey: t => bool = \"ctrlKey\"\n  @get external shiftKey: t => bool = \"shiftKey\"\n  @get external altKey: t => bool = \"altKey\"\n  @get external metaKey: t => bool = \"metaKey\"\n  @send\n  external getModifierState: (t, string) => bool = \"getModifierState\"\n  @get external button: t => int = \"button\"\n  @get external buttons: t => int = \"buttons\"\n  @get @return(nullable)\n  external relatedTarget: t => option<{..}> = \"relatedTarget\" /* Should return Dom.eventTarget */\n  @get external pointerId: t => Dom.eventPointerId = \"pointerId\"\n  @get external width: t => float = \"width\"\n  @get external height: t => float = \"height\"\n  @get external pressure: t => float = \"pressure\"\n  @get external tangentialPressure: t => float = \"tangentialPressure\"\n  @get external tiltX: t => int = \"tiltX\"\n  @get external tiltY: t => int = \"tiltY\"\n  @get external twist: t => int = \"twist\"\n  @get external pointerType: t => string = \"pointerType\"\n  @get external isPrimary: t => bool = \"isPrimary\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Selection.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Touch.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external altKey: t => bool = \"altKey\"\n  @get external changedTouches: t => {..} = \"changedTouches\" /* Should return Dom.touchList */\n  @get external ctrlKey: t => bool = \"ctrlKey\"\n  @send\n  external getModifierState: (t, string) => bool = \"getModifierState\"\n  @get external metaKey: t => bool = \"metaKey\"\n  @get external shiftKey: t => bool = \"shiftKey\"\n  @get external targetTouches: t => {..} = \"targetTouches\" /* Should return Dom.touchList */\n  @get external touches: t => {..} = \"touches\" /* Should return Dom.touchList */\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.UI.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external detail: t => int = \"detail\"\n  @get external view: t => Dom.window = \"view\" /* Should return DOMAbstractView/WindowProxy */\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Wheel.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external deltaMode: t => int = \"deltaMode\"\n  @get external deltaX: t => float = \"deltaX\"\n  @get external deltaY: t => float = \"deltaY\"\n  @get external deltaZ: t => float = \"deltaZ\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Media.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Image.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Animation.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external animationName: t => string = \"animationName\"\n  @get external pseudoElement: t => string = \"pseudoElement\"\n  @get external elapsedTime: t => float = \"elapsedTime\"\n}"
      ],
      [
        "tag",
        "  type tag = ReactEvent.Transition.tag\n  type t = synthetic<tag>\n  include MakeEventWithType({\n    type t = t\n  })\n  @get external propertyName: t => string = \"propertyName\"\n  @get external pseudoElement: t => string = \"pseudoElement\"\n  @get external elapsedTime: t => float = \"elapsedTime\"\n}"
      ]
    ],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "toSyntheticEvent",
        "external toSyntheticEvent: synthetic<'a> => Synthetic.t = \"%identity\""
      ]
    ]
  },
  {
    "moduleName": "ReactV3",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [],
    "modifiedTypes": [],
    "deletedTypes": [
      [
        "element",
        "type element = React.element"
      ],
      [
        "componentLike",
        "type componentLike<'props, 'return> = React.componentLike<'props, 'return>"
      ],
      [
        "component",
        "type component<'props> = React.component<'props>"
      ],
      [
        "ref",
        "type ref<'value> = React.ref<'value>"
      ],
      [
        "t",
        "  type t<'value> = ref<'value>\n  @deprecated(\"Please directly read from ref.current instead\") @get\n  external current: ref<'value> => 'value = \"current\"\n  @deprecated(\"Please directly assign to ref.current instead\") @set\n  external setCurrent: (ref<'value>, 'value) => unit = \"current\"\n}"
      ],
      [
        "t",
        "  type t<'props> = React.Context.t<'props>\n  @obj\n  external makeProps: (\n    ~value: 'props,\n    ~children: element,\n    unit,\n  ) => {\"value\": 'props, \"children\": element} = \"\"\n  @get\n  external provider: t<'props> => component<{\"value\": 'props, \"children\": element}> = \"Provider\"\n}"
      ],
      [
        "revealOrder",
        "    type revealOrder = React.Experimental.SuspenseList.revealOrder\n    type tail = React.Experimental.SuspenseList.tail\n    @obj\n    external makeProps: (\n      ~children: element=?,\n      ~revealOrder: [#forwards | #backwards | #together]=?,\n      ~tail: [#collapsed | #hidden]=?,\n      unit,\n    ) => {\"children\": option<element>, \"revealOrder\": option<revealOrder>, \"tail\": option<tail>} =\n      \"\"\n    @module(\"react\")\n    external make: component<{\n      \"children\": option<element>,\n      \"revealOrder\": option<revealOrder>,\n      \"tail\": option<tail>,\n    }> = \"SuspenseList\"\n  }\n}"
      ],
      [
        "callback",
        "type callback<'input, 'output> = React.callback<'input, 'output>"
      ],
      [
        "transitionConfig",
        "type transitionConfig = React.transitionConfig"
      ]
    ],
    "addedExternals": [],
    "modifiedExternals": [],
    "deletedExternals": [
      [
        "float",
        "external float: float => element = \"%identity\""
      ],
      [
        "int",
        "external int: int => element = \"%identity\""
      ],
      [
        "string",
        "external string: string => element = \"%identity\""
      ],
      [
        "array",
        "external array: array<element> => element = \"%identity\""
      ],
      [
        "component",
        "external component: componentLike<'props, element> => component<'props> = \"%identity\""
      ],
      [
        "createElement",
        "external createElement: (component<'props>, 'props) => element = \"createElement\""
      ],
      [
        "cloneElement",
        "external cloneElement: (element, 'props) => element = \"cloneElement\""
      ],
      [
        "createElementVariadic",
        "external createElementVariadic: (component<'props>, 'props, array<element>) => element ="
      ],
      [
        "jsxKeyed",
        "external jsxKeyed: (component<'props>, 'props, string) => element = \"jsx\""
      ],
      [
        "jsx",
        "external jsx: (component<'props>, 'props) => element = \"jsx\""
      ],
      [
        "jsxs",
        "external jsxs: (component<'props>, 'props) => element = \"jsxs\""
      ],
      [
        "jsxsKeyed",
        "external jsxsKeyed: (component<'props>, 'props, string) => element = \"jsxs\""
      ],
      [
        "createRef",
        "external createRef: unit => ref<Js.nullable<'a>> = \"createRef\""
      ],
      [
        "map",
        "  external map: (element, element => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external mapWithIndex: (element, @uncurry (element, int) => element) => element = \"map\"\n  @module(\"react\") @scope(\"Children\")\n  external forEach: (element, element => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external forEachWithIndex: (element, @uncurry (element, int) => unit) => unit = \"forEach\"\n  @module(\"react\") @scope(\"Children\")\n  external count: element => int = \"count\"\n  @module(\"react\") @scope(\"Children\")\n  external only: element => element = \"only\"\n  @module(\"react\") @scope(\"Children\")\n  external toArray: element => array<element> = \"toArray\"\n}"
      ],
      [
        "createContext",
        "external createContext: 'a => Context.t<'a> = \"createContext\""
      ],
      [
        "forwardRef",
        "external forwardRef: (@uncurry ('props, Js.Nullable.t<ref<'a>>) => element) => component<'props> ="
      ],
      [
        "memo",
        "external memo: component<'props> => component<'props> = \"memo\""
      ],
      [
        "memoCustomCompareProps",
        "external memoCustomCompareProps: (\n  component<'props>,\n  @uncurry ('props, 'props) => bool,\n) => component<'props> = \"memo\""
      ],
      [
        "makeProps",
        "  external makeProps: (~children: element, ~key: 'key=?, unit) => {\"children\": element} = \"\"\n  @module(\"react\")\n  external make: component<{\n    \"children\": element,\n  }> = \"Fragment\"\n}"
      ],
      [
        "makeProps",
        "  external makeProps: (~children: element, ~key: 'key=?, unit) => {\"children\": element} = \"\"\n  @module(\"react\")\n  external make: component<{\n    \"children\": element,\n  }> = \"StrictMode\"\n}"
      ],
      [
        "makeProps",
        "  external makeProps: (\n    ~children: element=?,\n    ~fallback: element=?,\n    ~key: 'key=?,\n    unit,\n  ) => {\"children\": option<element>, \"fallback\": option<element>} = \"\"\n  @module(\"react\")\n  external make: component<{\n    \"children\": option<element>,\n    \"fallback\": option<element>,\n  }> = \"Suspense\"\n}"
      ],
      [
        "useState",
        "external useState: (@uncurry (unit => 'state)) => ('state, ('state => 'state) => unit) = \"useState\""
      ],
      [
        "useReducer",
        "external useReducer: (@uncurry ('state, 'action) => 'state, 'state) => ('state, 'action => unit) ="
      ],
      [
        "useReducerWithMapState",
        "external useReducerWithMapState: (\n  @uncurry ('state, 'action) => 'state,\n  'initialState,\n  @uncurry ('initialState => 'state),\n) => ('state, 'action => unit) = \"useReducer\""
      ],
      [
        "useEffect",
        "external useEffect: (@uncurry (unit => option<unit => unit>)) => unit = \"useEffect\""
      ],
      [
        "useEffect0",
        "external useEffect0: (@uncurry (unit => option<unit => unit>), @as(json`[]`) _) => unit ="
      ],
      [
        "useEffect1",
        "external useEffect1: (@uncurry (unit => option<unit => unit>), array<'a>) => unit = \"useEffect\""
      ],
      [
        "useEffect2",
        "external useEffect2: (@uncurry (unit => option<unit => unit>), ('a, 'b)) => unit = \"useEffect\""
      ],
      [
        "useEffect3",
        "external useEffect3: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c)) => unit = \"useEffect\""
      ],
      [
        "useEffect4",
        "external useEffect4: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd)) => unit ="
      ],
      [
        "useEffect5",
        "external useEffect5: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e)) => unit ="
      ],
      [
        "useEffect6",
        "external useEffect6: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e, 'f)) => unit ="
      ],
      [
        "useEffect7",
        "external useEffect7: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useEffect\""
      ],
      [
        "useLayoutEffect",
        "external useLayoutEffect: (@uncurry (unit => option<unit => unit>)) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect0",
        "external useLayoutEffect0: (@uncurry (unit => option<unit => unit>), @as(json`[]`) _) => unit ="
      ],
      [
        "useLayoutEffect1",
        "external useLayoutEffect1: (@uncurry (unit => option<unit => unit>), array<'a>) => unit ="
      ],
      [
        "useLayoutEffect2",
        "external useLayoutEffect2: (@uncurry (unit => option<unit => unit>), ('a, 'b)) => unit ="
      ],
      [
        "useLayoutEffect3",
        "external useLayoutEffect3: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c)) => unit ="
      ],
      [
        "useLayoutEffect4",
        "external useLayoutEffect4: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd)) => unit ="
      ],
      [
        "useLayoutEffect5",
        "external useLayoutEffect5: (@uncurry (unit => option<unit => unit>), ('a, 'b, 'c, 'd, 'e)) => unit ="
      ],
      [
        "useLayoutEffect6",
        "external useLayoutEffect6: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => unit = \"useLayoutEffect\""
      ],
      [
        "useLayoutEffect7",
        "external useLayoutEffect7: (\n  @uncurry (unit => option<unit => unit>),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useLayoutEffect\""
      ],
      [
        "useMemo",
        "external useMemo: (@uncurry (unit => 'any)) => 'any = \"useMemo\""
      ],
      [
        "useMemo0",
        "external useMemo0: (@uncurry (unit => 'any), @as(json`[]`) _) => 'any = \"useMemo\""
      ],
      [
        "useMemo1",
        "external useMemo1: (@uncurry (unit => 'any), array<'a>) => 'any = \"useMemo\""
      ],
      [
        "useMemo2",
        "external useMemo2: (@uncurry (unit => 'any), ('a, 'b)) => 'any = \"useMemo\""
      ],
      [
        "useMemo3",
        "external useMemo3: (@uncurry (unit => 'any), ('a, 'b, 'c)) => 'any = \"useMemo\""
      ],
      [
        "useMemo4",
        "external useMemo4: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd)) => 'any = \"useMemo\""
      ],
      [
        "useMemo5",
        "external useMemo5: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e)) => 'any = \"useMemo\""
      ],
      [
        "useMemo6",
        "external useMemo6: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e, 'f)) => 'any = \"useMemo\""
      ],
      [
        "useMemo7",
        "external useMemo7: (@uncurry (unit => 'any), ('a, 'b, 'c, 'd, 'e, 'f, 'g)) => 'any = \"useMemo\""
      ],
      [
        "useCallback",
        "external useCallback: (@uncurry ('input => 'output)) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useCallback0",
        "external useCallback0: (\n  @uncurry ('input => 'output),\n  @as(json`[]`) _,\n) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useCallback1",
        "external useCallback1: (@uncurry ('input => 'output), array<'a>) => callback<'input, 'output> ="
      ],
      [
        "useCallback2",
        "external useCallback2: (@uncurry ('input => 'output), ('a, 'b)) => callback<'input, 'output> ="
      ],
      [
        "useCallback3",
        "external useCallback3: (@uncurry ('input => 'output), ('a, 'b, 'c)) => callback<'input, 'output> ="
      ],
      [
        "useCallback4",
        "external useCallback4: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd),\n) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useCallback5",
        "external useCallback5: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e),\n) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useCallback6",
        "external useCallback6: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useCallback7",
        "external useCallback7: (\n  @uncurry ('input => 'output),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => callback<'input, 'output> = \"useCallback\""
      ],
      [
        "useContext",
        "external useContext: Context.t<'any> => 'any = \"useContext\""
      ],
      [
        "useImperativeHandle0",
        "external useImperativeHandle0: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  @as(json`[]`) _,\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle1",
        "external useImperativeHandle1: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  array<'a>,\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle2",
        "external useImperativeHandle2: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle3",
        "external useImperativeHandle3: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle4",
        "external useImperativeHandle4: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle5",
        "external useImperativeHandle5: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle6",
        "external useImperativeHandle6: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e, 'f),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useImperativeHandle7",
        "external useImperativeHandle7: (\n  Js.Nullable.t<ref<'value>>,\n  @uncurry (unit => 'value),\n  ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n) => unit = \"useImperativeHandle\""
      ],
      [
        "useState",
        "  external useState: (@uncurry (unit => 'state)) => ('state, (. 'state => 'state) => unit) =\n    \"useState\"\n  @module(\"react\")\n  external useReducer: (\n    @uncurry ('state, 'action) => 'state,\n    'state,\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  @module(\"react\")\n  external useReducerWithMapState: (\n    @uncurry ('state, 'action) => 'state,\n    'initialState,\n    @uncurry ('initialState => 'state),\n  ) => ('state, (. 'action) => unit) = \"useReducer\"\n  type callback<'input, 'output> = React.callback<'input, 'output>\n  @module(\"react\")\n  external useCallback: (@uncurry ('input => 'output)) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback0: (\n    @uncurry ('input => 'output),\n    @as(json`[]`) _,\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback1: (@uncurry ('input => 'output), array<'a>) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback2: (@uncurry ('input => 'output), ('a, 'b)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback3: (@uncurry ('input => 'output), ('a, 'b, 'c)) => callback<'input, 'output> =\n    \"useCallback\"\n  @module(\"react\")\n  external useCallback4: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback5: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback6: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f),\n  ) => callback<'input, 'output> = \"useCallback\"\n  @module(\"react\")\n  external useCallback7: (\n    @uncurry ('input => 'output),\n    ('a, 'b, 'c, 'd, 'e, 'f, 'g),\n  ) => callback<'input, 'output> = \"useCallback\"\n}"
      ],
      [
        "useTransition",
        "external useTransition: (\n  ~config: transitionConfig=?,\n  unit,\n) => (callback<callback<unit, unit>, unit>, bool) = \"useTransition\""
      ],
      [
        "setDisplayName",
        "external setDisplayName: (component<'props>, string) => unit = \"displayName\""
      ],
      [
        "displayName",
        "external displayName: component<'props> => option<string> = \"displayName\""
      ]
    ]
  },
  {
    "moduleName": "ReactDOMStatic",
    "addedFunctions": [],
    "modifiedFunctions": [],
    "deletedFunctions": [],
    "addedTypes": [
      [
        "abortSignal",
        "type abortSignal // WebAPI.EventAPI.abortSignal"
      ],
      [
        "nodeStream",
        "type nodeStream // NodeJs.Stream.stream"
      ],
      [
        "readableStream",
        "type readableStream // WebAPI.FileAPI.readableStream"
      ],
      [
        "prerenderOptions",
        "type prerenderOptions<'error> = {\n  bootstrapScriptContent?: string,\n  bootstrapScripts?: array<string>,\n  bootstrapModules?: array<string>,\n  identifierPrefix?: string,\n  namespaceURI?: string,\n  onError?: 'error => unit,\n  progressiveChunkSize?: int,\n  signal?: abortSignal,\n}"
      ],
      [
        "staticResult",
        "type staticResult = {prelude: readableStream}"
      ],
      [
        "staticResultNode",
        "type staticResultNode = {prelude: nodeStream}"
      ]
    ],
    "modifiedTypes": [],
    "deletedTypes": [],
    "addedExternals": [
      [
        "prerender",
        "external prerender: (React.element, ~options: prerenderOptions<'error>=?) => promise<staticResult> ="
      ],
      [
        "prerenderToNodeStream",
        "external prerenderToNodeStream: (\n  React.element,\n  ~options: prerenderOptions<'error>=?,\n) => promise<staticResultNode> = \"prerenderToNodeStream\""
      ]
    ],
    "modifiedExternals": [],
    "deletedExternals": []
  }
]